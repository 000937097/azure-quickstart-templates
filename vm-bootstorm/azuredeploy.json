{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "vmstoracc",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "metadata": {
        "description": "Region to deploy VMs."
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "defaultValue": "vmadmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "defaultValue": "vmpass123!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "vmnamevm",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs to create."
      }
    },
    "vmOsDiskName": {
      "type": "string",
      "defaultValue": "vmosdisk",
      "metadata": {
        "description": "Name of the OS disk of a Virtual Machine."
      }
    },
    "vmDataDiskName": {
      "type": "string",
      "defaultValue": "vmdatadisk",
      "metadata": {
        "description": "Name of the data disk of a Virtual Machine."
      }
    },
    "vmDataDiskSize": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Size of the data disk of a Virtual Machine in GB."
      }
    },
    "vmOsSku": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "vmdns",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "azureAdApplicationId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD Application ID to authenticate inside controller VM."
      }
    },
    "azureAdApplicationPassword": {
      "type": "string",
      "metadata": {
        "description": "Azure AD Application password to authenticate inside controller VM."
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure Subscription Tenant Id."
      }
    },
    "modulesPath": {
      "type": "string",
      "defaultValue": "https://raw.github.com/dipakmsft/azure-quickstart-templates/blob/master/vm-bootstorm",
      "metadata": {
        "description": "The location of resources where scripts are stored"
      }
    },
    "moduleVMBootAll": {
      "type": "string",
      "defaultValue": "VMBootAll.zip",
      "metadata": {
        "description": "The module for booting all VMs"
      }
    },
    "configurationFunctionVMBootAll": {
      "type": "string",
      "defaultValue": "VMBootAll.ps1\\ConfigureVMBootAll",
      "metadata": {
        "description": "DSC configuration function to call. e.g. FileName.ps1\\ConfigurationFunctionName"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "vmsubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "vmpublicip",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vmstoraccn",
    "vmSize": "Standard_A2",
    "vmNicName": "vmnic",
    "virtualNetworkName": "vmvnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "modulesUrlVMBootAll": "[concat(parameters('modulesPath'),parameters('moduleVMBootAll'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vmNicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigpublic",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNicName'),copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigprivate",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('vmOsSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmOsDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'),copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('vmOsSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',concat(parameters('vmOsDiskName'),copyIndex()),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmDataDiskName'), copyindex(),'.vhd')]"
              },
              "name": "[concat(parameters('vmDataDiskName'), copyindex())]",
              "createOption": "empty",
              "caching": "None",
              "diskSizeGB": "[parameters('vmDataDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName'),copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/dscExtension')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.6",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('modulesUrlVMBootAll')]",
          "configurationFunction": "[parameters('configurationFunctionVMBootAll')]",
          "properties": [
            {
              "name": "AzureAdApplicationId",
              "value": "[parameters('azureAdApplicationId')]",
              "typeName": "System.String"
            },
            {
              "name": "AzureAdApplicationPassword",
              "value": "[parameters('azureAdApplicationPassword')]",
              "typeName": "System.String"
            },
            {
              "name": "TenantId",
              "value": "[parameters('tenantId')]",
              "typeName": "System.String"
            },
            {
              "name": "VMName",
              "value": "[parameters('vmName')]",
              "typeName": "System.String"
            },
            {
              "name": "VMCount",
              "value": "[parameters('vmCount')]",
              "typeName": "System.Int32"
            },
            {
              "name": "AzureStorageAccount",
              "value": "[parameters('storageAccountName')]",
              "typeName": "System.String"
            }
          ]
        },
        "protectedSettings": {
          "Items": {
            "a9921090-01f7-4d9f-9f85-7ac8bb4e2492": "[parameters('azureAdApplicationPassword')]"
          }
        }
      }
    }
  ]
}

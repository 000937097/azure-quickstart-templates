{
	"$schema": "http://schemas.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},

		"sku": {
			"type": "string",
			"allowedValues": [
				"Free",
				"Shared",
				"Basic",
				"Standard"
			],
			"defaultValue": "Standard",
			"metadata": {
				"description": "The pricing tier for the hosting plan."
			}
		},
		"appName": {
			"type": "string",
			"defaultValue": "[concat('Function-', uniqueString(resourceGroup().name, utcNow('F')))]",
			"metadata": {
				"description": "That name is the name of our application. It has to be unique.Type a name followed by your resource group name. (<name>-<resourceGroupName>)"
			}
		},
		"workerSize": {
			"type": "string",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"defaultValue": "0",
			"metadata": {
				"description": "The instance size of the hosting plan (small, medium, or large)."
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Storage Account type"
			}
		},
		"repoURL": {
			"type": "string",
			"defaultValue": "https://github.com/AzureBytes/functionshttpecho.git",
			"metadata": {
				"description": "The URL for the GitHub repository that contains the project to deploy."
			}
		},
		"branch": {
			"type": "string",
			"defaultValue": "master",
			"metadata": {
				"description": "The branch of the GitHub repository to use.",
				"functionAppName": "[parameters('appName')]",
				"hostingPlanName": "[concat(parameters('appName'), '-plan')]",
				"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]"
			}
		},
		"resources": {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('storageAccountName')]",
			"apiVersion": "2018-11-01",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		"type": "Microsoft.Web/serverfarms",
		"name": "[variables('hostingPlanName')]",
		"location": "[parameters('location')]",
		"properties": {
			"name": "[variables('hostingPlanName')]",
			"sku": "[parameters('sku')]",
			"workerSize": "[parameters('workerSize')]",
			"numberOfWorkers": 1
		},
		"type": "Microsoft.Web/sites",
		"name": "[variables('functionAppName')]",
		"location": "[parameters('location')]",
		"kind": "functionapp",
		"properties": {
			"name": "[variables('functionAppName')]",
			"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
			"clientAffinityEnabled": false,
			"siteConfig": {
				"alwaysOn": true,
				"cors": {
					"allowedOrigins": [
						"*"
					]
				},
				"appSettings": [{
					"name": "FUNCTIONS_EXTENSION_VERSION",
					"value": "~1"
				}, {
					"name": "AzureWebJobsStorage",
					"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
				}, {
					"name": "AzureWebJobsDashboard",
					"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
				}]
			}
		},
		"dependsOn": [
			"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
			"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
    },
		"resources": {
				"apiVersion": "2018-11-01",
				"name": "web",
				"type": "sourcecontrols",
				"dependsOn": [
					"[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
				],
				"properties": {
					"RepoUrl": "[parameters('repoURL')]",
					"branch": "[parameters('branch')]"
        }
      }
}  
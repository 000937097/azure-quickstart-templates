{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    // this test uses Find-JsonContent which looks anywhere for an "id" property
    "parameters": {
        "test": {
            "type": "string",
            "metadata": {
                "id": "whoops" //TODO exclude metadata tags
            }
        }
    },
    "variables": {
        "id": "[resourceId('Microsoft.Storage/storageAccounts', 'name')]", //TODO this throws off the error message since we pull the parent's name (in this case 'variables')
        "fail0": {
            "id": "" //this causes the test to fail, but is probably worth flagging
        },
        "fail1": {
            "id": true
        },
        "fail2": {
            "id": 1
        },
        "fail3": {
            "id": "literal"
        },
        "fail4": {
            "id": "[concat( variables('id'))]" //technicall it works, but not a best practice
        },
        "fail5": {
            "test": "[resourceId ( resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
        },
        "pass1": {
            "id": "[ resourceId ( 'Microsoft.Network/applicationGateways/httpListeners', 'appGW', 'appGatewayHttpListener')]"
        },
        "pass2": {
            "id": "[parameters ('appGatewayBackendPool')]"
        },
        "pass3": {
            "id": "[variables('id')]"
        },
        "pass4": {
            "id": "[resourceId(parameters('storageResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
        }
    },
    "resources": [
    ],
    "outputs": {
    }
}

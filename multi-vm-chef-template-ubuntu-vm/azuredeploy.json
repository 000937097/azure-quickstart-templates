{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters" : {
        "newStorageAccountName": {
            "type": "string",
            "metadata" : {
              "Description": "Storage Account Name"
            }
        },
        "vmDnsName": {
                "type": "string",
                "metadata" : {
                  "Description": "DNS Name"
                }
        },
        "numberOfInstances" : {
          "type": "int",
          "defaultValue": 2,
          "metadata": {
                 "Description": "Number of VM instances to create"
            }
        },

        "availabilitySetName": {
        "type": "string",
        "metadata": {
              "Description": "Availability Set name"
                    }
          },

        "adminUserName": {
            "type": "string",
            "metadata" : {
              "Description": "Admin User Name"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata" : {
              "Description": "Admin Password"
            }
        },

        "imagePublisher": {
           "type": "string",
           "defaultValue": "Canonical",
           "metadata": {
                  "Description": "Image Publisher"
             }
         },

         "imageOffer": {
          "type": "string",
             "defaultValue": "UbuntuServer",
             "metadata": {
               "Description": "Image Offer"
            }
         },

          "imageSKU": {
          "type": "string",
                   "defaultValue": "14.04.2-LTS",
           "metadata": {
                 "Description": "Image SKU"
             }
         },

          "location": {
          "type": "String",
           "defaultValue" : "West US",
                "metadata": {
              "Description": "Location for the VM"
          }
        },

          "vmSize": {
           "type": "string",
             "defaultValue": "Standard_A0",
                "metadata": {
                 "Description": "VM Size"
             }
         },

        "chef_node_name": {
            "type": "string",
            "metadata" : {
              "Description": "Chef Node Name"
            }
        },
        "chef_server_url": {
            "type": "string",
            "metadata" : {
              "Description": "Chef Server URL"
            }
        },
        "validation_client_name": {
            "type": "string",
            "metadata" : {
              "Description": "Client Validator Name for Chef"
            }
        },
        "runlist": {
            "type": "string",
            "defaultValue": "recipe[getting-started]",
            "metadata" : {
              "Description": "Optional Run List to Execute"
            }
        },
        "autoUpdateClient": {
            "type": "string",
            "defaultValue": "false",
            "metadata" : {
              "Description": "Optional Flag for auto update"
            }
        },
        "validation_key": {
            "type":  "string",
            "metadata" : {
              "Description": "JSON Escaped Validation Key"
            }
        }

    },
    "variables": {
        "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnet1Ref" : "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
        "vmExtensionName" : "LinuxChefExtension",
        "vmName": "[parameters('vmDnsName')]",
        "storageAccountType" : "Standard_LRS",
        "publicIPAddressName" : "myPublicIP",
        "publicIPAddressType" : "Dynamic",
        "vmStorageAccountContainerName" : "vhds",
        "virtualNetworkName" : "MyVNET",
        "addressPrefix" : "10.0.0.0/16",
        "subnet1Name": "subnet-1",
        "subnet2Name": "subnet-2",
        "subnet1Prefix" : "10.0.0.0/24",
        "subnet2Prefix" : "10.0.1.0/24",
        "nicName" : "myVMNic",
        "dnsName" : "[variables('subnet1Name')]"
      },
		"resources": [
    {
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[parameters('newStorageAccountName')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "properties": {
          "accountType": "[variables('storageAccountType')]"
       }
    },

     {
        "type": "Microsoft.Compute/availabilitySets",
         "name": "[parameters('availabilitySetName')]",
         "apiVersion": "2015-05-01-preview",
         "location": "[parameters('location')]",
         "properties": {}
     },

    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
        "location": "[parameters('location')]",
        "copy": {
           "name": "publicIPLoop",
           "count": "[parameters('numberOfInstances')]"
        },

        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
              "domainNameLabel": "[parameters('vmDnsName')]"
            }
        }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties" : {
                "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties" : {
                "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'),copyIndex())]",
        "location": "[parameters('location')]",
        "copy": {
           "name": "nicLoop",
           "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
            "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                    },
                    "subnet": {
                        "id": "[variables('subnet1Ref')]"
                    }
                }
            }
            ]
        }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('vmName'),copyIndex())]",
        "location": "[parameters('location')]",
        "copy": {
           "name": "vmLoop",
           "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
            "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
            },
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computername": "[concat(variables('vmName'),copyIndex())]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
              "imageReference": {
                 "publisher": "[parameters('imagePublisher')]",
                     "offer": "[parameters('imageOffer')]",
                     "sku" : "[parameters('imageSKU')]",
                     "version":"latest"
                 },
                 "osDisk" : {
                     "name": "osdisk",
                     "vhd": {
                        "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
                     },
                     "caching": "ReadWrite",
                     "createOption": "FromImage"
                 }
            },
            "networkProfile": {
                "networkInterfaces" : [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'),copyIndex())]"
                }
                ]
            }
        }
    },
    {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/', variables('vmExtensionName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "copy": {
               "name": "extensionLoop",
               "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Chef.Bootstrap.WindowsAzure",
                "type": "LinuxChefClient",
                "typeHandlerVersion": "1204.12",
                "settings": {
                  "bootstrap_options":
                  {
                    "chef_node_name" : "[concat(parameters('chef_node_name'),copyIndex()]",
                    "chef_server_url" : "[parameters('chef_server_url')]",
                    "validation_client_name" : "[parameters('validation_client_name')]"
                  },
                    "runlist": "[parameters('runlist')]"
                },
                "protectedSettings": {
                    "validation_key": "[parameters('validation_key')]"
                }
            }
        }
    ]
}

{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineName": {
      "type": "String",
      "metadata": {
        "description": "The name of the VM"
      }
    },
    "virtualMachineSize": {
      "type": "String",
      "defaultValue": "Standard_DS13_v2",
      "allowedValues": [
        "Standard_DS13_v2",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "The virtual machine size."
      }
    },
    "exisitingVirtualNetworkId": {
      "type": "String",
      "metadata": {
        "description": "Specify the id of an exisiting VNet, e.g /subscriptions/{subscription}/resourceGroups/{resourceGroup}/providers/Microsoft.Network/virtualNetworks/{vnetName}"
      }
    },
    "exisitingSubNetName": {
      "type": "String",
      "metadata": {
        "description": "Specify the name of the SubNet Name"
      }
    },
    "imageOffer": {
      "type": "String",
      "allowedValues": [
        "SQL2017-WS2016",
        "SQL2016SP1-WS2016",
        "SQL2016SP2-WS2016",
        "SQL2014SP3-WS2012R2",
        "SQL2014SP2-WS2012R2"
      ],
      "defaultValue": "SQL2017-WS2016",
      "metadata": {
        "description": "Windows Server and SQL Offer"
      }
    },
    "sqlSku": {
      "type": "String",
      "allowedValues": [
        "Standard",
        "Enterprise",
        "SQLDEV",
        "Web",
        "Express"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "SQL Server Sku"
      }
    },
    "adminUsername": {
      "type": "String",
      "metadata": {
        "description": "The admin user name of the VM"
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The admin password of the VM"
      }
    },
    "storageWorkloadType": {
      "type": "String",
      "allowedValues": [
        "General",
        "OLTP",
        "DW"
      ],
      "defaultValue": "General",
      "metadata": {
        "description": "SQL Server Workload Type"
      }
    },
    "dataDisksLuns": {
      "type": "Array",
      "defaultValue": "[array(parameters('dataDisks')[0].lun)]",
	  
      "metadata": {
        "description": "The LUNs for the disks used for SQL data files"
      }
    },
    "dataPath": {
      "type": "String",
      "defaultValue": "F:\\SQLData",
      "metadata": {
        "description": "Path for SQL Data files"
      }
    },
    "logDisksLuns": {
      "type": "Array",
      "defaultValue": "[array(parameters('dataDisks')[1].lun)]",
      "metadata": {
        "description": "The LUNs for the disks used for SQL Log files"
      }
    },
    "logPath": {
      "type": "String",
      "defaultValue": "G:\\SQLLog",
      "metadata": {
        "description": "Path for SQL Log files"
      }
    },
    "tempDbPath": {
      "type": "String",
      "defaultValue": "D:\\SQLTemp",
      "metadata": {
        "description": "Path for SQL Temp DB files"
      }
    },
    "dataDisks": {
      "type": "Array",
      "defaultValue": [
        {
          "lun": 0,
          "createOption": "empty",
          "caching": "ReadOnly",
          "writeAcceleratorEnabled": false,
          "id": null,
          "name": null,
          "storageAccountType": "Premium_LRS",
          "diskSizeGB": 1023
        },
        {
          "lun": 1,
          "createOption": "empty",
          "caching": "None",
          "writeAcceleratorEnabled": false,
          "id": null,
          "name": null,
          "storageAccountType": "Premium_LRS",
          "diskSizeGB": 1023
        }
      ],
      "metadata": {
        "description": "Data disks used for SQL Data and Log files"
      }
    }
  },
  "variables": {
    "networkInterfaceName":  "[concat(parameters('virtualMachineName'), '-nic')]",
    "networkSecurityGroupName":  "[concat(parameters('virtualMachineName'), '-nsg')]",
    "networkSecurityGroupRules": [
      {
        "name": "RDP",
        "properties": {
          "priority": 300,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "3389"
        }
      }
    ],
    "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-publicip')]",
    "publicIpAddressType": "Dynamic",
    "publicIpAddressSku": "Basic",
    "diskConfigurationType": "NEW",
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
    "subnetRef": "[concat(parameters('exisitingVirtualNetworkId'), '/subnets/', parameters('exisitingSubNetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRules')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true,
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('sqlSku')]",
            "version": "latest"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(parameters('dataDisks'))]",
              "input": {
                "lun": "[parameters('dataDisks')[copyIndex('dataDisks')].lun]",
                "createOption": "[parameters('dataDisks')[copyIndex('dataDisks')].createOption]",
                "caching": "[parameters('dataDisks')[copyIndex('dataDisks')].caching]",
                "writeAcceleratorEnabled": "[parameters('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled]",
                "diskSizeGB": "[parameters('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                "managedDisk": {
                  "id": "[coalesce(parameters('dataDisks')[copyIndex('dataDisks')].id, if(equals(parameters('dataDisks')[copyIndex('dataDisks')].name, json('null')), json('null'), resourceId('Microsoft.Compute/disks', parameters('dataDisks')[copyIndex('dataDisks')].name)))]",
                  "storageAccountType": "[parameters('dataDisks')[copyIndex('dataDisks')].storageAccountType]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        }
      }
    },
    {
      "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[parameters('virtualMachineName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
        "sqlManagement": "Full",
        "SqlServerLicenseType": "PAYG",
        "StorageConfigurationSettings": {
          "DiskConfigurationType": "[variables('diskConfigurationType')]",
          "StorageWorkloadType": "[parameters('storageWorkloadType')]",
          "SQLDataSettings": {
            "LUNs": "[parameters('dataDisksLUNs')]",
            "DefaultFilePath": "[parameters('dataPath')]"
          },
          "SQLLogSettings": {
            "Luns": "[parameters('logDisksLUNs')]",
            "DefaultFilePath": "[parameters('logPath')]"
          },
          "SQLTempDbSettings": {
            "DefaultFilePath": "[parameters('tempDbPath')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    }
  }
}
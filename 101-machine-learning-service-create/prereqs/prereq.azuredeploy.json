{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            }
        },
        "modelFilePath": {
            "type": "string",
            "defaultValue": "model.py",
            "metadata": {
                "description": "relative path to the model file in the staged/source location."
            }
        }
    },
    "variables": {
        "scriptName": "uploadModelFile",
        "identityName": "scratch",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]", //'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleDefinitionName": "[guid(variables('identityName'), variables('roleDefinitionId'))]",
        "fileUri": "[uri(parameters('_artifactsLocation'), concat(parameters('modelFilePath'), parameters('_artifactsLocationSasToken')))]",
        "storageAccountName": "[concat('sa', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('roleDefinitionName')]",
            "dependsOn": [
                "[variables('identityName')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[reference(variables('identityName')).principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "ml",
            "dependsOn": [
                "[variables('roleDefinitionName')]" // doing this last gives the above roleAssignment time to replicate
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/modules/machine-learning-workspace/0.9/azuredeploy.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "[variables('scriptName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "ml"
            ],
            "kind": "AzurePowerShell",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": { /*ttk bug*/
                    }
                }
            },
            "properties": {
                "forceUpdateTag": "0",
                "azPowerShellVersion": "3.0",
                "arguments": "[format(' -fileUri ''{0}'' -destStorageAccountName {1} -destContainer {2} -destStorageAccountResourceGroupName ''{3}''', 
                                       variables('fileUri'),
                                       variables('storageAccountName'),
                                       'mlmodels',
                                       resourceGroup().name)]",
                "scriptContent": "
                    param(
                      [string] $fileUri,
                      [string] $destStorageAccountName,
                      [string] $destContainer,
                      [string] $destStorageAccountResourceGroupName
                    )
                      $storageAccountKey = $(Get-AzStorageAccountKey -StorageAccountName $destStorageAccountName -ResourceGroupName $destStorageAccountResourceGroupName)[0].value
                      $ctx = New-AzStorageContext -StorageAccountName $destStorageAccountName -StorageAccountKey \"$storageAccountKey\"
                      New-AzStorageContainer -Context $ctx -Container $destContainer -ErrorAction SilentlyContinue # in case it exists
                      Start-AzStorageBlobCopy -AbsoluteUri \"$fileUri\" -DestContext $ctx -DestContainer $destContainer -DestBlob model.py -Verbose
                    ",
                "timeout": "PT5M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }
    ],
    "outputs": {
        "workspaceName": {
            "type": "string",
            "value": "[reference('ml').outputs.workspaceName.value]"
        }
    }
}

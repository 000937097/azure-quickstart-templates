{  
   "$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{  
      "dnsName":{  
         "type":"string",
         "metadata":{  
            "description":"Connect to your cluster using dnsName.location.cloudapp.azure.com"
         }
      },
      "vmUserName":{  
         "type":"string",
         "metadata":{  
            "description":"user name to ssh to the VMs"
         }
      },
      "vmPassword":{  
         "type":"securestring",
         "metadata":{  
            "description":"password to ssh to the VMs"
         }
      },
      "mysqlRootPassword":{  
         "type":"securestring",
         "metadata":{  
            "description":"mysql root user password single quote not allowed"
         }
      },
      "mysqlReplicationPassword":{  
         "type":"securestring",
         "metadata":{  
            "description":"mysql replication user password single quote not allowed"
         }
      },
      "mysqlProbePassword":{  
         "type":"securestring",
         "metadata":{  
            "description":"mysql probe password single quote not allowed"
         }
      },
      "vmSize":{  
         "type":"string",
         "defaultValue":"Standard_D2",
         "metadata":{  
            "description":"size for the VMs"
         }
      },
      "vnetNewOrExisting":{  
         "type":"string",
         "defaultValue":"new",
         "allowedValues":[  
            "new",
            "existing"
         ],
         "metadata":{  
            "description":"Identifies whether to use a new or existing Virtual Network"
         }
      },
      "vnetExistingResourceGroupName":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"If using existing VNet, specifies the resource group for the existing VNet"
         }
      },
      "virtualNetworkName":{  
         "type":"string",
         "defaultValue":"mysqlvnet",
         "metadata":{  
            "description":"New or existing Virtual network name"
         }
      },
      "dbSubnetName":{  
         "type":"string",
         "defaultValue":"default",
         "metadata":{  
            "description":"subnet name for the MySQL nodes"
         }
      },
      "vnetAddressPrefix":{  
         "type":"string",
         "defaultValue":"10.0.0.0/16",
         "metadata":{  
            "description":"IP address in CIDR for virtual network"
         }
      },
      "dbSubnetAddressPrefix":{  
         "type":"string",
         "defaultValue":"10.0.1.0/24",
         "metadata":{  
            "description":"IP address in CIDR for db subnet"
         }
      },
      "dbSubnetStartAddress":{  
         "type":"string",
         "defaultValue":"10.0.1.4",
         "metadata":{  
            "description":"Start IP address in the subnet for the VMs"
         }
      },
      "imagePublisher":{  
         "type":"string",
         "defaultValue":"OpenLogic",
         "allowedValues":[  
            "OpenLogic"
         ],
         "metadata":{  
            "description":"publisher for the VM OS image"
         }
      },
      "imageOffer":{  
         "type":"string",
         "defaultValue":"CentOS",
         "allowedValues":[  
            "CentOS"
         ],
         "metadata":{  
            "description":"VM OS name"
         }
      },
      "imageSKU":{  
         "type":"string",
         "defaultValue":"6.6",
         "allowedValues":[  
            "6.5",
            "6.6"
         ],
         "metadata":{  
            "description":"VM OS version"
         }
      },
      "mysqlFrontEndPort0":{  
         "type":"int",
         "defaultValue":3306,
         "metadata":{  
            "description":"MySQL public port master"
         }
      },
      "mysqlFrontEndPort1":{  
         "type":"int",
         "defaultValue":3307,
         "metadata":{  
            "description":"MySQL public port slave"
         }
      },
      "sshNatRuleFrontEndPort0":{  
         "type":"int",
         "defaultValue":64001,
         "metadata":{  
            "description":"public ssh port for VM1"
         }
      },
      "sshNatRuleFrontEndPort1":{  
         "type":"int",
         "defaultValue":64002,
         "metadata":{  
            "description":"public ssh port for VM2"
         }
      },
      "mysqlProbePort0":{  
         "type":"int",
         "defaultValue":9200,
         "metadata":{  
            "description":"MySQL public port master"
         }
      },
      "mysqlProbePort1":{  
         "type":"int",
         "defaultValue":9201,
         "metadata":{  
            "description":"MySQL public port slave"
         }
      },
      "_artifactsLocation":{  
         "type":"string",
         "metadata":{  
            "description":"The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
         },
         "defaultValue":"[variables('template').base]"
      },
      "_artifactsLocationSasToken":{  
         "type":"securestring",
         "metadata":{  
            "description":"The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
         },
         "defaultValue":""
      },
      "artifactsPath":{  
         "type":"string",
         "metadata":{  
            "description":"template and script file location",
            "artifactsBaseUrl":"Base URL of the Publisher Template gallery package"
         }
      },
      "customScriptCommandToExecute":{  
         "type":"string",
         "defaultValue":"bash azuremysql.sh",
         "metadata":{  
            "description":"bash script command line"
         }
      },
      "publicIPName":{  
         "type":"string",
         "defaultValue":"mysqlIP01",
         "metadata":{  
            "description":"public IP name for MySQL loadbalancer"
         }
      }
   },
   "variables":{  
      "resourceAPIVersion":"2015-06-15",
      "nodeCount":2,
      "lbPublicIPName":"[parameters('publicIPName')]",
      "dbSubnetStartAddress":"[parameters('dbSubnetStartAddress')]",
      "lbPublicIPRef":"[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName'))]",
      "lbName":"[concat(parameters('dnsName'), '-lb')]",
      "lbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
      "ilbBackendAddressPoolName":"[concat(parameters('dnsName'), '-ilbBackendPool')]",
      "ilbBackendAddressPoolID":"[concat(variables('lbID'),'/backendAddressPools/', variables('ilbBackendAddressPoolName'))]",
      "ilbRuleName":"[concat(parameters('dnsName'), '-ilbRule')]",
      "ilbRuleID":"[concat(variables('lbID'),'/loadBalancingRules/',variables('ilbRuleName'))]",
      "sshIPConfigName":"[concat(parameters('dnsName'), '-sshIPCfg')]",
      "sshIPConfig":"[concat(variables('lbID'),'/frontendIPConfigurations/',variables('sshIPConfigName'))]",
      "nicName":"[concat(parameters('dnsName'), '-nic')]",
      "availabilitySetName":"[concat(parameters('dnsName'), '-set')]",
      "customScriptFilePath":"[concat(parameters('_artifactsLocation'), '/', '/scripts/azuremysql.sh', parameters('_artifactsLocationSasToken'))], )]",
      "mysqlConfigFilePath":"[concat(parameters('artifactsPath'), '/scripts/my.cnf.template')]",
      "customScriptCommandToExecute":"[parameters('customScriptCommandToExecute')]",
      "singleQuote":"",
      "virtualNetworkSetupURL":"[concat(parameters('artifactsPath'),'/nested/vnet-',parameters('vnetNewOrExisting'),'.json')]",
      "sa":"[variables('dbSubnetStartAddress')]",
      "ipOctet01":"[concat(split(variables('sa'), '.')[0], '.', split(variables('sa'), '.')[1], '.')]",
      "ipOctet2":"[int(split(variables('sa'), '.')[2])]",
      "ipOctet3":"[int(split(variables('sa'), '.')[3])]",
      "DbName":"[concat(uniquestring(resourceGroup().id),'wordpress')]",
      "templateAPIVersion":"2015-01-01",
      "vmSize":"[parameters('vmSize')]",
      "storageAccountType":"Standard_LRS",
      "vnetAddressPrefix":"[parameters('vnetAddressPrefix')]",
      "dbSubnetAddressPrefix":"[parameters('dbSubnetAddressPrefix')]",
      "imageOffer":"[parameters('imageOffer')]",
      "imageSku":"[parameters('imageSku')]",
      "mysqlFrontEndPort0":"[parameters('mysqlFrontEndPort0')]",
      "mysqlFrontEndPort1":"[parameters('mysqlFrontEndPort1')]",
      "sshNatRuleFrontEndPort0":"[parameters('sshNatRuleFrontEndPort0')]",
      "sshNatRuleFrontEndPort1":"[parameters('sshNatRuleFrontEndPort1')]",
      "mysqlProbePort0":"[parameters('mysqlProbePort0')]",
      "mysqlProbePort1":"[parameters('mysqlProbePort1')]",
      "storageAccountName":"[concat(uniquestring(resourceGroup().id),'storage')]"
   },
   "resources":[  
      {  
         "name":"SettingUpVirtualNetwork",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('virtualNetworkSetupURL')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "virtualNetworkName":{  
                  "value":"[parameters('virtualNetworkName')]"
               },
               "virtualNetworkAddressPrefix":{  
                  "value":"[variables('vnetAddressPrefix')]"
               },
               "dbSubnetName":{  
                  "value":"[parameters('dbSubnetName')]"
               },
               "dbSubnetAddressPrefix":{  
                  "value":"[variables('dbSubnetAddressPrefix')]"
               },
               "vnetExistingResourceGroupName":{  
                  "value":"[parameters('vnetExistingResourceGroupName')]"
               }
            }   
         }
      },
      {  
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[variables('storageAccountName')]",
         "apiVersion":"2015-06-15",
         "location":"[resourceGroup().location]",
         "properties":{  
            "accountType":"[variables('storageAccountType')]"
         }
      },
      {  
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('lbPublicIPName')]",
         "location":"[resourceGroup().location]",
         "properties":{  
            "publicIPAllocationMethod":"Static",
            "dnsSettings":{  
               "domainNameLabel":"[parameters('dnsName')]"
            }
         }
      },
      {  
         "type":"Microsoft.Compute/availabilitySets",
         "name":"[variables('availabilitySetName')]",
         "apiVersion":"2015-06-15",
         "location":"[resourceGroup().location]",
         "properties":{  

         }
      },
      {  
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[concat(variables('nicName'), copyIndex())]",
         "location":"[resourceGroup().location]",
         "copy":{  
            "name":"nicLoop",
            "count":"[variables('nodeCount')]"
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
            "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
         ],
         "properties":{  
            "ipConfigurations":[  
               {  
                  "name":"[concat('ipconfig', copyIndex())]",
                  "properties":{  
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[concat(variables('ipOctet01'), add(variables('ipOctet2'), div(copyIndex(variables('ipOctet3')), 255)), '.', mod(copyIndex(variables('ipOctet3')), 255))]",
                     "subnet":{  
                        "id":"[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', variables('templateAPIVersion')).outputs.dbSubnetRef.value]"
                     },
                     "loadBalancerBackendAddressPools":[  
                        {  
                           "id":"[variables('ilbBackendAddressPoolID')]"
                        }
                     ],
                     "loadBalancerInboundNatRules":[  
                        {  
                           "id":"[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'NatRule', copyIndex())]"
                        },
                        {  
                           "id":"[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'ProbeNatRule', copyIndex())]"
                        },
                        {  
                           "id":"[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'MySQLNatRule', copyIndex())]"
                        }
                     ]
                  }
               }
            ]
         }
      },
      {  
         "name":"[concat(parameters('dnsName'), copyIndex())]",
         "type":"Microsoft.Compute/virtualMachines",
         "apiVersion":"2015-06-15",
         "location":"[resourceGroup().location]",
         "copy":{  
            "name":"vmLoop",
            "count":"[variables('nodeCount')]"
         },
         "dependsOn":[  
            "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
         ],
         "properties":{  
            "availabilitySet":{  
               "id":"[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
            },
            "hardwareProfile":{  
               "vmSize":"[variables('vmSize')]"
            },
            "osProfile":{  
               "computerName":"[concat(parameters('dnsName'), copyIndex())]",
               "adminUsername":"[parameters('vmUserName')]",
               "adminPassword":"[parameters('vmPassword')]"
            },
            "storageProfile":{  
               "imageReference":{  
                  "publisher":"[parameters('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[parameters('imageSKU')]",
                  "version":"latest"
               },
               "osDisk":{  
                  "name":"osdisk",
                  "vhd":{  
                     "uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('resourceAPIVersion')).primaryEndpoints.blob, 'vhds/', parameters('dnsName'), copyIndex(), 'osdisk.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage"
               },
               "dataDisks":[  
                  {  
                     "name":"datadisk1",
                     "diskSizeGB":"1000",
                     "lun":0,
                     "vhd":{  
                        "uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('resourceAPIVersion')).primaryEndpoints.blob, 'vhds/', parameters('dnsName'), copyIndex(), 'dataDisk1.vhd')]"
                     },
                     "createOption":"Empty"
                  },
                  {  
                     "name":"datadisk2",
                     "diskSizeGB":"1000",
                     "lun":1,
                     "vhd":{  
                        "uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('resourceAPIVersion')).primaryEndpoints.blob, 'vhds/', parameters('dnsName'), copyIndex(), 'dataDisk2.vhd')]"
                     },
                     "createOption":"Empty"
                  }
               ]
            },
            "networkProfile":{  
               "networkInterfaces":[  
                  {  
                     "id":"[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nicName')), copyIndex())]"
                  }
               ]
            }
         }
      },
      {  
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('dnsName'), copyIndex(), '/setupMySQL')]",
         "apiVersion":"2015-06-15",
         "location":"[resourceGroup().location]",
         "copy":{  
            "name":"extLoop",
            "count":"[variables('nodeCount')]"
         },
         "dependsOn":[  
            "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsName'), copyIndex())]"
         ],
         "properties":{  
            "publisher":"Microsoft.Azure.Extensions",
            "type":"CustomScript",
            "typeHandlerVersion":"2.0",
            "autoUpgradeMinorVersion":true,
            "settings":{  
               "fileUris":[  
                  "[variables('customScriptFilePath')]"
               ]
            },
            "protectedSettings":{  
               "commandToExecute":"[concat(variables('customScriptCommandToExecute'), ' ', copyIndex(1), ' ', variables('ipOctet01'), add(variables('ipOctet2'), div(copyIndex(variables('ipOctet3')), 255)), '.', mod(copyIndex(variables('ipOctet3')), 255), ' ', variables('mysqlConfigFilePath'), ' ', variables('singleQuote'), parameters('mysqlReplicationPassword'), variables('singleQuote'), ' ', variables('singleQuote'), parameters('mysqlRootPassword'), variables('singleQuote'), ' ', variables('singleQuote'), parameters('mysqlProbePassword'), variables('singleQuote'), ' ', variables('dbSubnetStartAddress'),' ', variables('DbName'))]"
            }
         }
      },
      {  
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Network/loadBalancers",
         "name":"[variables('lbName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[  
            "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPublicIPName'))]"
         ],
         "properties":{  
            "frontendIPConfigurations":[  
               {  
                  "name":"[variables('sshIPConfigName')]",
                  "properties":{  
                     "publicIPAddress":{  
                        "id":"[variables('lbPublicIPRef')]"
                     }
                  }
               }
            ],
            "backendAddressPools":[  
               {  
                  "name":"[variables('ilbBackendAddressPoolName')]"
               }
            ],
            "inboundNatRules":[  
               {  
                  "name":"[concat(parameters('dnsName'),'NatRule0')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('sshNatRuleFrontEndPort0')]",
                     "backendPort":22,
                     "enableFloatingIP":false
                  }
               },
               {  
                  "name":"[concat(parameters('dnsName'),'NatRule1')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('sshNatRuleFrontEndPort1')]",
                     "backendPort":22,
                     "enableFloatingIP":false
                  }
               },
               {  
                  "name":"[concat(parameters('dnsName'),'MySQLNatRule0')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('mysqlFrontEndPort0')]",
                     "backendPort":3306,
                     "enableFloatingIP":false
                  }
               },
               {  
                  "name":"[concat(parameters('dnsName'),'MySQLNatRule1')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('mysqlFrontEndPort1')]",
                     "backendPort":3306,
                     "enableFloatingIP":false
                  }
               },
               {  
                  "name":"[concat(parameters('dnsName'),'ProbeNatRule0')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('mysqlProbePort0')]",
                     "backendPort":9200,
                     "enableFloatingIP":false
                  }
               },
               {  
                  "name":"[concat(parameters('dnsName'),'ProbeNatRule1')]",
                  "properties":{  
                     "frontendIPConfiguration":{  
                        "id":"[variables('sshIPConfig')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":"[variables('mysqlProbePort1')]",
                     "backendPort":9200,
                     "enableFloatingIP":false
                  }
               }
            ]
         }
      }
   ],
   "outputs":{  
      "fqdn":{  
         "value":"[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
         "type":"string"
      },
      "ipaddress":{  
         "value":"[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).ipAddress]",
         "type":"string"
      }
   }
}

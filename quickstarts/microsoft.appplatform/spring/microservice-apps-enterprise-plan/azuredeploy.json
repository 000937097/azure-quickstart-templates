{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": { },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "postgresServer": "pg-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "springApps": "asa-",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "location": "[resourceGroup().location]",
    "resourceToken": "[toLower(uniqueString(subscription().id, resourceGroup().name, variables('location')))]",
    "asaInstanceName": "[format('{0}{1}', variables('abbrs').springApps, variables('resourceToken'))]",
    "adminServerAppName": "admin-server",
    "customersServiceAppName": "customers-service",
    "vetsServiceAppName": "vets-service",
    "visitsServiceAppName": "visits-service",
    "apiGatewayAppName": "api-gateway",
    "logAnalyticsName": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]",
    "applicationInsightsName": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]",
    "applicationInsightsDashboardName": "[format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))]",
    "userAssignedManagedIdentityName": "[format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]",
    "const_ownerRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
    "const_scriptLocation": "https://github.com/Azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.appplatform/spring/microservice-apps-enterprise-plan/scripts/",
    "const_uploadScriptName": "deploy-jar-to-asa.sh",
    "const_checkScriptName": "check-provision-state.ps1",
    "const_checkingBuilderStateDeploymentName": "checking-build-service-builder-state",
    "ref_identityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedManagedIdentityName'))]",
    "name_deploymentScriptName": "asa-enterprise-deployment-script",
    "name_roleAssignmentName": "[guid(format('{0}{1}Role assignment in group{0}', resourceGroup().name, variables('ref_identityId')))]",
    "tags": {
      "spring-cloud-azure": "true",
      "deploy-to-azure-button": "true"
    }
  },
  "resources": [
    {
      "type": "Microsoft.AppPlatform/Spring",
      "apiVersion": "2023-05-01-preview",
      "name": "[variables('asaInstanceName')]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "E0",
        "tier": "Enterprise"
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/buildServices",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "resourceRequests": {}
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('asaInstanceName'), variables('adminServerAppName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "public": true,
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        },
        "enableEndToEndTLS": false,
        "ingressSettings": {
          "readTimeoutInSeconds": 300,
          "sendTimeoutInSeconds": 60,
          "sessionCookieMaxAge": 0,
          "sessionAffinity": "None",
          "backendProtocol": "Default"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('asaInstanceName'), variables('customersServiceAppName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        },
        "enableEndToEndTLS": false,
        "ingressSettings": {
          "readTimeoutInSeconds": 300,
          "sendTimeoutInSeconds": 60,
          "sessionCookieMaxAge": 0,
          "sessionAffinity": "None",
          "backendProtocol": "Default"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('asaInstanceName'), variables('vetsServiceAppName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        },
        "enableEndToEndTLS": false,
        "ingressSettings": {
          "readTimeoutInSeconds": 300,
          "sendTimeoutInSeconds": 60,
          "sessionCookieMaxAge": 0,
          "sessionAffinity": "None",
          "backendProtocol": "Default"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('asaInstanceName'), variables('visitsServiceAppName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        },
        "enableEndToEndTLS": false,
        "ingressSettings": {
          "readTimeoutInSeconds": 300,
          "sendTimeoutInSeconds": 60,
          "sessionCookieMaxAge": 0,
          "sessionAffinity": "None",
          "backendProtocol": "Default"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}', variables('asaInstanceName'), variables('apiGatewayAppName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "public": true,
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        },
        "enableEndToEndTLS": false,
        "ingressSettings": {
          "readTimeoutInSeconds": 300,
          "sendTimeoutInSeconds": 60,
          "sessionCookieMaxAge": 0,
          "sessionAffinity": "None",
          "backendProtocol": "Default"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('asaInstanceName'), variables('adminServerAppName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('adminServerAppName'))]"

      ],
      "properties": {
        "active": true,
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "1",
            "memory": "2Gi"
          }
        },
        "source": {
          "type": "BuildResult",
          "buildResultId": "<default>"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('asaInstanceName'), variables('customersServiceAppName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('customersServiceAppName'))]"
      ],
      "properties": {
        "active": true,
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "1",
            "memory": "2Gi"
          }
        },
        "source": {
          "type": "BuildResult",
          "buildResultId": "<default>"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('asaInstanceName'), variables('vetsServiceAppName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('vetsServiceAppName'))]"
      ],
      "properties": {
        "active": true,
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "1",
            "memory": "2Gi"
          }
        },
        "source": {
          "type": "BuildResult",
          "buildResultId": "<default>"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('asaInstanceName'), variables('visitsServiceAppName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('visitsServiceAppName'))]"
      ],
      "properties": {
        "active": true,
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "1",
            "memory": "2Gi"
          }
        },
        "source": {
          "type": "BuildResult",
          "buildResultId": "<default>"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-05-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('asaInstanceName'), variables('apiGatewayAppName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('apiGatewayAppName'))]"
      ],
      "properties": {
        "active": true,
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "1",
            "memory": "2Gi"
          }
        },
        "source": {
          "type": "BuildResult",
          "buildResultId": "<default>"
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('userAssignedManagedIdentityName')]",
      "apiVersion": "2023-01-31",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('name_roleAssignmentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedManagedIdentityName'))]",
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('const_ownerRole')]",
        "principalId": "[reference(variables('ref_identityId')).principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('const_checkingBuilderStateDeploymentName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('name_roleAssignmentName'))]",
        "[resourceId('Microsoft.AppPlatform/Spring/apps/deployments', variables('asaInstanceName'), variables('adminServerAppName'), 'default')]",
        "[resourceId('Microsoft.AppPlatform/Spring/apps/deployments', variables('asaInstanceName'), variables('customersServiceAppName'), 'default')]",
        "[resourceId('Microsoft.AppPlatform/Spring/apps/deployments', variables('asaInstanceName'), variables('vetsServiceAppName'), 'default')]",
        "[resourceId('Microsoft.AppPlatform/Spring/apps/deployments', variables('asaInstanceName'), variables('visitsServiceAppName'), 'default')]",
        "[resourceId('Microsoft.AppPlatform/Spring/apps/deployments', variables('asaInstanceName'), variables('apiGatewayAppName'), 'default')]"
      ],
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedManagedIdentityName')))]": {}
        }
      },
      "properties": {
        "azPowerShellVersion": "9.7",
        "primaryScriptUri": "[uri(variables('const_scriptLocation'), variables('const_checkScriptName'))]",
        "environmentVariables": [
          {
            "name": "SUBSCRIPTION_ID",
            "value": "[subscription().subscriptionId]"
          },
          {
            "name": "RESOURCE_GROUP",
            "value": "[resourceGroup().name]"
          },
          {
            "name": "ASA_SERVICE_NAME",
            "value": "[variables('asaInstanceName')]"
          }
        ],
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/buildservices/builders/buildpackBindings",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default/default/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('const_checkingBuilderStateDeploymentName'))]"
      ],
      "properties": {
        "bindingType": "ApplicationInsights",
        "launchProperties": {
          "properties": {
            "sampling_percentage": 10,
            "connection_string": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').ConnectionString]"
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "tags": "[variables('tags')]",
      "kind": "java",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "CustomDeployment",
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('logAnalyticsName'))]",
        "IngestionMode": "Disabled",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/applicationAccelerators",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ]
    },
    {
      "type": "Microsoft.AppPlatform/Spring/applicationLiveViews",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ]
    },
    {
      "type": "Microsoft.AppPlatform/Spring/configurationServices",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "settings": {
          "gitProperty": {
            "repositories": [
              {
                "name": "default",
                "patterns": [
                  "application",
                  "api-gateway",
                  "admin-server",
                  "customers-service",
                  "vets-service",
                  "visits-service"
                ],
                "label": "master",
                "uri": "https://github.com/Azure-Samples/spring-petclinic-microservices-config.git"
              }
            ]
          }
        },
        "generation": "Gen1"
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/devToolPortals",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "properties": {
        "public": false,
        "features": {
          "applicationAccelerator": {
            "state": "Enabled"
          },
          "applicationLiveView": {
            "state": "Enabled"
          }
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/gateways",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ],
      "sku": {
        "name": "E0",
        "tier": "Enterprise",
        "capacity": 2
      },
      "properties": {
        "public": false,
        "httpsOnly": false,
        "resourceRequests": {
          "cpu": "1",
          "memory": "2Gi"
        },
        "clientAuth": {
          "certificateVerification": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/serviceRegistries",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]"
      ]
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apiPortals",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('asaInstanceName'))]",
        "[resourceId('Microsoft.AppPlatform/Spring/gateways', variables('asaInstanceName'), 'default')]"
      ],
      "sku": {
        "name": "E0",
        "tier": "Enterprise",
        "capacity": 1
      },
      "properties": {
        "public": false,
        "httpsOnly": false,
        "gatewayIds": [
          "[resourceId('Microsoft.AppPlatform/Spring/gateways', variables('asaInstanceName'), 'default')]"
        ]
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/buildServices/agentPools",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(variables('asaInstanceName'), '/default/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/buildServices', variables('asaInstanceName'), 'default')]"
      ],
      "properties": {
        "poolSize": {
          "name": "S1"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('name_deploymentScriptName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/buildservices/builders/buildpackBindings', variables('asaInstanceName'), 'default', 'default', 'default')]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('name_roleAssignmentName'))]"
      ],
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedManagedIdentityName')))]": {}
        }
      },
      "properties": {
        "AzCliVersion": "2.41.0",
        "primaryScriptUri": "[uri(variables('const_scriptLocation'), variables('const_uploadScriptName'))]",
        "environmentVariables": [
          {
            "name": "SUBSCRIPTION_ID",
            "value": "[subscription().subscriptionId]"
          },
          {
            "name": "RESOURCE_GROUP",
            "value": "[resourceGroup().name]"
          },
          {
            "name": "ASA_SERVICE_NAME",
            "value": "[variables('asaInstanceName')]"
          }
        ],
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    }
  ],
  "outputs": {
    "API Gateway URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('apiGatewayAppName')), '2023-05-01-preview').url]"
    },
    "Admin Server URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.AppPlatform/Spring/apps', variables('asaInstanceName'), variables('adminServerAppName')), '2023-05-01-preview').url]"
    }
  }
}

{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "iotHubName": {
        "type": "string",
        "metadata": {
          "description": "The name of the source event hub."
        }
      },
      "iotHubSku": {
        "type": "string",
        "defaultValue": "S1",
        "metadata": {
          "description": "The name of the IoT hub Sku."
        }
      },
      "iotHubSkuTier": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
          "description": "The billing tier for the IoT hub."
        }
      },
      "consumerGroupName": {
        "type": "string",
        "metadata": {
          "description": "The name of the consumer group that the Time Series Insights service will use to read the data from the event hub. NOTE: To avoid resource contention, this consumer group must be dedicated to the Time Series Insights service and not shared with other readers."
        }
      },
      "existingIoTHubResourceId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "An optional resource id of an existing Event Hub that will be connected to the Time Series Insights environment through the event source. NOTE: The user deploying the template must have privliges to perform the listkeys operation on the Event Hub. If no value is passed, a new event hub will be created by the template."
        }
      },
      "environmentName": {
        "type": "string",
        "maxLength": 90,
        "metadata": {
          "description": "Name of the environment. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
        }
      },
      "environmentDisplayName": {
        "type": "string",
        "defaultValue": "",
        "maxLength": 90,
        "metadata": {
          "description": "An optional friendly name to show in tooling or user interfaces instead of the environment name."
        }
      },
      "environmentSkuName": {
        "type": "string",
        "defaultValue": "L1",
        "allowedValues": [
          "L1"
        ],
        "metadata": {
          "description": "The name of the sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
        }
      },
      "environmentKind": {
        "type": "string",
        "defaultValue": "LongTerm",
        "allowedValues": [
          "LongTerm"
        ],
        "metadata": {
          "description": "The Time Series Environment kind."
        }
      },
      "environmentSkuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 10,
        "metadata": {
          "description": "The unit capacity of the Sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
        }
      },
      "environmentTimeSeriesIdProperties": {
          "type": "array",
          "minLength": 1,
          "maxLength": 3,
          "metadata": {
              "description": "Time Series ID acts as a partition key for your data and as a primary key for your time series model. It is important that you specify the appropriate Time Series Property ID during environment creation, since you canâ€™t change it later. Note that the Property ID is case sensitive. You can use 1-3 keys: one is required, but up to three can be used to create a composite."
          }
      },
      "eventSourceName": {
        "type": "string",
        "maxLength": 90,
        "metadata": {
          "description": "Name of the event source child resource. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
        }
      },
      "eventSourceDisplayName": {
        "type": "string",
        "defaultValue": "",
        "maxLength": 90,
        "metadata": {
          "description": "An optional friendly name to show in tooling or user interfaces instead of the event source name."
        }
      },
      "eventSourceTimestampPropertyName": {
        "type": "string",
        "defaultValue": "",
        "maxLength": 90,
        "metadata": {
          "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used."
        }
      },
      "eventSourceKeyName": {
        "type": "string",
        "defaultValue": "service",
        "metadata": {
          "description": "The name of the shared access key that the Time Series Insights service will use to connect to the event hub."
        }
      },
      "accessPolicyReaderObjectIds": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "A list of object ids of the users or applications in AAD that should have Reader access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
        }
      },
      "accessPolicyContributorObjectIds": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "A list of object ids of the users or applications in AAD that should have Contributor access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_ZRS"
        ],
        "metadata": {
          "description": "Storage Account type for L1 TSI environments."
        }
      }
    },
    "variables": {
      "environmentTagsOptions": [
        null,
        {
          "displayName": "[parameters('environmentDisplayName')]"
        }
      ],
      "environmentTagsValue": "[variables('environmentTagsOptions')[length(take(parameters('environmentDisplayName'), 1))]]",
      "eventSourceTagsOptions": [
        null,
        {
          "displayName": "[parameters('eventSourceDisplayName')]"
        }
      ],
      "eventSourceTagsValue": "[variables('eventSourceTagsOptions')[length(take(parameters('eventSourceDisplayName'), 1))]]",
      "eventSourceResourceId": "[if(empty(parameters('existingIoTHubResourceId')), resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), parameters('existingIoTHubResourceId'))]",
      "storageAccountName": "[concat('tsi', uniquestring(resourceGroup().id))]"  
    },
    "resources": [
      {
        "condition": "[empty(parameters('existingIoTHubResourceId'))]",
        "apiVersion": "2016-02-03",
        "type": "Microsoft.Devices/IotHubs",
        "name": "[parameters('iotHubName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('iotHubSku')]",
          "tier": "[parameters('iotHubSkuTier')]",
          "capacity": 1
        }
      },
      {
        "condition": "[empty(parameters('existingIoTHubResourceId'))]",
        "apiVersion": "2016-02-03",
        "name": "[concat(parameters('iotHubName'), '/events/', parameters('consumerGroupName'))]",
        "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
        "dependsOn": [
          "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
        ]
      },
      {
        "type": "Microsoft.TimeSeriesInsights/environments",
        "name": "[parameters('environmentName')]",
        "apiVersion": "2018-08-15-preview",
        "location": "[parameters('location')]",
        "kind": "[parameters('environmentKind')]",
        "properties": {
            "storageConfiguration": {
                "accountName": "[variables('storageAccountName')]",
                "managementKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-07-01').keys[0].value]"
            },
            "timeSeriesIdProperties": "[parameters('environmentTimeSeriesIdProperties')]"
        },
        "sku": {
          "name": "[parameters('environmentSkuName')]",
          "capacity": "[parameters('environmentSkuCapacity')]"
        },
        "tags": "[variables('environmentTagsValue')]",
        "resources": [
          {
            "type": "eventsources",
            "name": "[parameters('eventSourceName')]",
            "apiVersion": "2018-08-15-preview",
            "location": "[parameters('location')]",
            "kind": "Microsoft.IoTHub",
            "properties": {
              "eventSourceResourceId": "[variables('eventSourceResourceId')]",
              "iotHubName": "[parameters('iotHubName')]",
              "consumerGroupName": "[parameters('consumerGroupName')]",
              "keyName": "[parameters('eventSourceKeyName')]",
              "sharedAccessKey": "[listkeys(concat(variables('eventSourceResourceId'), '/IoTHubKeys/', parameters('eventSourceKeyName')), '2016-02-03').primaryKey]",
              "timestampPropertyName": "[parameters('eventSourceTimestampPropertyName')]"
            },
            "tags": "[variables('eventSourceTagsValue')]",
            "dependsOn": [
              "[concat('Microsoft.TimeSeriesInsights/environments/', parameters('environmentName'))]",
              "[concat('Microsoft.Devices/IotHubs/', parameters('iotHubName'))]",
              "[concat('Microsoft.Devices/IotHubs/', parameters('iotHubName'), '/eventHubEndpoints/events/ConsumerGroups/', parameters('consumerGroupName'))]"
            ]
          }
        ]
      },
      {
        "condition": "[not(empty(parameters('accessPolicyReaderObjectIds')))]",
        "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
        "name": "[concat(parameters('environmentName'), '/', 'readerAccessPolicy', copyIndex())]",
        "copy": {
          "name": "accessPolicyReaderCopy",
          "count": "[if(empty(parameters('accessPolicyReaderObjectIds')), 1, length(parameters('accessPolicyReaderObjectIds')))]"
        },
        "apiVersion": "2018-08-15-preview",
        "properties": {
          "principalObjectId": "[parameters('accessPolicyReaderObjectIds')[copyIndex()]]",
          "roles": [
            "Reader"
          ]
        },
        "dependsOn": [
          "[concat('Microsoft.TimeSeriesInsights/environments/', parameters('environmentName'))]"
        ]
      },
      {
        "condition": "[not(empty(parameters('accessPolicyContributorObjectIds')))]",
        "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
        "name": "[concat(parameters('environmentName'), '/', 'contributorAccessPolicy', copyIndex())]",
        "copy": {
          "name": "accessPolicyReaderCopy",
          "count": "[if(empty(parameters('accessPolicyContributorObjectIds')), 1, length(parameters('accessPolicyContributorObjectIds')))]"
        },
        "apiVersion": "2018-08-15-preview",
        "properties": {
          "principalObjectId": "[parameters('accessPolicyContributorObjectIds')[copyIndex()]]",
          "roles": [
            "Contributor"
          ]
        },
        "dependsOn": [
          "[concat('Microsoft.TimeSeriesInsights/environments/', parameters('environmentName'))]"
        ]
      },
      {
        "condition": "[equals(parameters('environmentKind'), 'LongTerm')]",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "apiVersion": "2018-07-01",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "StorageV2",
        "properties": {}
      }
    ],
    "outputs": {
      "dataAccessFQDN": {
        "value": "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', parameters('environmentName'))).dataAccessFQDN]",
        "type": "string"
      }
    }
  }
  
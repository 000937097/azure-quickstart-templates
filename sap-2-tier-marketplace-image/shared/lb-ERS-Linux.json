{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "ersInstanceNumber": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": ""
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subnet you want to use."
            }
        },
        "nicBackAddressPoolsArray": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": ""
            }
        },
        "frontendIPConfigurationsArray": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": ""
            }
        },
        "backendAddressPoolsArray": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": ""
            }
        },
        "loadBalancingRulesArray": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": ""
            }
        },
        "probesArray": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": ""
            }
        }
    },
    "variables": {
        "apiVerion": "2015-06-15",
        "lbPrefix": "[concat('lb', padLeft(parameters('ersInstanceNumber'), 2, '0'))]",
        "lbrulePrefix": "[concat(variables('lbPrefix'), 'Rule')]",
        "backendPoolERS": "[concat(variables('lbPrefix'), 'BackendPoolERS')]",
        "loadBalancerFrontendERS": "[concat(variables('lbPrefix'), 'FrontendERS')]",
        "lbProbePortERS": "[concat(variables('lbPrefix'), 'ProbePortERS')]",
        "lbProbePortInternalERS": "[add(62100, parameters('ersInstanceNumber'))]",
        "idleTimeoutInMinutesERS": 30,
        "nicBackAddressPoolsResult": [
            {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('backendPoolERS'))]"
            }
        ],
        "frontendIPConfigurationsResult": [
            {
                "properties": {
                    "subnet": {
                        "id": "[parameters('subnetId')]"
                    },
                    "privateIPAllocationMethod": "Dynamic"
                },
                "name": "[variables('loadBalancerFrontendERS')]"
            }
        ],
        "backendAddressPoolsResult": [
            {
                "name": "[variables('backendPoolERS')]"
            }
        ],
        "loadBalancingRulesResult": [
            {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendERS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('backendPoolERS'))]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', variables('lbProbePortERS'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(3300, parameters('ersInstanceNumber'))]",
                    "backendPort": "[add(3300, parameters('ersInstanceNumber'))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutesERS')]"
                },
                "name": "[concat(variables('lbrulePrefix'), '33', padLeft(parameters('ersInstanceNumber'), 2, '0'))]"
            },
            {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendERS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('backendPoolERS'))]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', variables('lbProbePortERS'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50013, mul(parameters('ersInstanceNumber'), 100))]",
                    "backendPort": "[add(50013, mul(parameters('ersInstanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutesERS')]"
                },
                "name": "[concat(variables('lbrulePrefix'), '5', padLeft(parameters('ersInstanceNumber'), 2, '0'), '13')]"
            },
            {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendERS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('backendPoolERS'))]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', variables('lbProbePortERS'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50014, mul(parameters('ersInstanceNumber'), 100))]",
                    "backendPort": "[add(50014, mul(parameters('ersInstanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutesERS')]"
                },
                "name": "[concat(variables('lbrulePrefix'), '5', padLeft(parameters('ersInstanceNumber'), 2, '0'), '14')]"
            },
            {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendERS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('backendPoolERS'))]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', variables('lbProbePortERS'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50016, mul(parameters('ersInstanceNumber'), 100))]",
                    "backendPort": "[add(50016, mul(parameters('ersInstanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutesERS')]"
                },
                "name": "[concat(variables('lbrulePrefix'), '5', padLeft(parameters('ersInstanceNumber'), 2, '0'), '16')]"
            }
        ],
        "probesResult": [
            {
                "properties": {
                    "protocol": "Tcp",
                    "port": "[variables('lbProbePortInternalERS')]",
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2
                },
                "name": "[variables('lbProbePortERS')]"
            }
        ]
    },
    "resources": [],
    "outputs": {
        "nicBackAddressPools": {
            "value": "[concat(parameters('nicBackAddressPoolsArray'), variables('nicBackAddressPoolsResult'))]",
            "type": "array"
        },
        "frontendIPConfigurations": {
            "value": "[concat(parameters('frontendIPConfigurationsArray'), variables('frontendIPConfigurationsResult'))]",
            "type": "array"
        },
        "backendAddressPools": {
            "value": "[concat(parameters('backendAddressPoolsArray'), variables('backendAddressPoolsResult'))]",
            "type": "array"
        },
        "loadBalancingRules": {
            "value": "[concat(parameters('loadBalancingRulesArray'), variables('loadBalancingRulesResult'))]",
            "type": "array"
        },
        "probes": {
            "value": "[concat(parameters('probesArray'), variables('probesResult'))]",
            "type": "array"
        }
    }
}
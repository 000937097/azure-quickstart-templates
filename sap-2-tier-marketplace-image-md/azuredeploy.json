{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sapSystemId": {
      "type": "string",
      "maxLength": 3,
      "minLength": 3,
      "defaultValue": "DEQ",
      "metadata": {
        "description": "SAP System ID."
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows Server 2012 Datacenter",
        "Windows Server 2012 R2 Datacenter",
        "Windows Server 2016 Datacenter",
        "SLES 12",
        "RHEL 7",
        "Oracle Linux 7"
      ],
      "defaultValue": "Windows Server 2016 Datacenter",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "sapSystemSize": {
      "type": "string",
      "allowedValues": [
        "Demo",
        "Small < 2.000 SAPS",
        "Medium < 9.000 SAPS",
        "Large < 18.000 SAPS",
        "X-Large < 40.000 SAPS"
      ],
      "defaultValue": "Small < 2.000 SAPS",
      "metadata": {
        "description": "The size of the SAP System you want to deploy."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    },
    "subnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The id of the subnet you want to use."
      }
    },
    "availabilityZone": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 3,
      "metadata": {
        "description": "Zone number. Set to 0 if you do not want to use Availability Zones"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sap-2-tier-marketplace-image-md/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "selectedZones":"[if(equals(parameters('availabilityZone'),0), json('null'), array(parameters('availabilityZone')))]",
    "images": {
      "Windows Server 2012 Datacenter": {
        "sku": "2012-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "OSType": "Windows"
      },
      "Windows Server 2012 R2 Datacenter": {
        "sku": "2012-R2-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "OSType": "Windows"
      },
      "Windows Server 2016 Datacenter": {
        "sku": "2016-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "OSType": "Windows"
      },
      "SLES 12": {
        "sku": "12-SP3",
        "offer": "SLES-SAP",
        "publisher": "SUSE",
        "OSType": "Linux"
      },
      "RHEL 7": {
        "sku": "7.5",
        "offer": "RHEL-SAP",
        "publisher": "RedHat",
        "OSType": "Linux"
      },
      "Oracle Linux 7": {
        "sku": "7.5",
        "offer": "Oracle-Linux",
        "publisher": "Oracle",
        "OSType": "Linux"
      }
    },
    "internalOSType": "[variables('images')[parameters('osType')].OSType]",
    "csExtension": {
      "Windows": {
        "Publisher": "Microsoft.Compute",
        "Name": "CustomScriptExtension",
        "Version": "1.7",
        "script": "[uri(parameters('_artifactsLocation'), concat('scripts/configureSAPVM.ps1', parameters('_artifactsLocationSasToken')))]",
        "scriptCall": "powershell.exe -ExecutionPolicy bypass -File configureSAPVM.ps1"
      },
      "Linux": {
        "Publisher": "Microsoft.Azure.Extensions",
        "Name": "CustomScript",
        "Version": "2.0",
        "script": "[uri(parameters('_artifactsLocation'), concat('scripts/configureSAPVM.sh', parameters('_artifactsLocationSasToken')))]",
        "scriptCall": "sh configureSAPVM.sh"
      }
    },
    "vmSizes": {
      "Demo": {
        "size": "Standard_D2s_v3",
        "disks": [
          {
            "size": 128
          },
          {
            "size": 128
          }
        ],
        "scriptArgs": " -DBDataLUNS '0' -DBLogLUNS '1'"
      },
      "Small < 2.000 SAPS": {
        "size": "Standard_E2s_v3",
        "disks": [
          {
            "size": 512
          },
          {
            "size": 512
          },
          {
            "size": 128
          }
        ],
        "scriptArgs": " -DBDataLUNS '0,1' -DBLogLUNS '2'"
      },
      "Medium < 9.000 SAPS": {
        "size": "Standard_E8s_v3",
        "disks": [
          {
            "size": 512
          },
          {
            "size": 512
          },
          {
            "size": 512
          },
          {
            "size": 128
          }
        ],
        "scriptArgs": " -DBDataLUNS '0,1,2' -DBLogLUNS '3'"
      },
      "Large < 18.000 SAPS": {
        "size": "Standard_E16s_v3",
        "disks": [
          {
            "size": 1023
          },
          {
            "size": 1023
          },
          {
            "size": 1023
          },
          {
            "size": 512
          }
        ],
        "scriptArgs": " -DBDataLUNS '0,1,2' -DBLogLUNS '3'"
      },
      "X-Large < 40.000 SAPS": {
        "size": "Standard_E64s_v3",
        "disks": [
          {
            "size": 1023
          },
          {
            "size": 1023
          },
          {
            "size": 1023
          },
          {
            "size": 1023
          },
          {
            "size": 512
          }
        ],
        "scriptArgs": " -DBDataLUNS '0,1,2,3' -DBLogLUNS '4'"
      }
    },
    "dataDiskSizes": "[variables('vmSizes')[parameters('sapSystemSize')].disks]",
    "sidlower": "[toLower(parameters('sapSystemId'))]",
    "vmName": "[concat(variables('sidlower'), '-servercs')]",
    "vnetName": "[concat(variables('sidlower'), '-vnet')]",
    "publicIpName": "[concat(variables('sidlower'), '-pib')]",
    "nicName": "[concat(variables('sidlower'), '-nic')]",
    "nsgName": "[concat(variables('sidlower'), '-nsg-cs')]",
    "subnetName": "Subnet",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "osSecurityRules": {
      "Windows": [
        {
          "name": "RDP",
          "properties": {
            "description": "Allow RDP Subnet",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        }
      ],
      "Linux": [
        {
          "name": "SSH",
          "properties": {
            "description": "Allow SSH Subnet",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "22",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        }
      ]
    },
    "selectedSecurityRules": "[variables('osSecurityRules')[variables('internalOSType')]]",
    "subnets": {
      "true": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
      "false": "[parameters('subnetId')]"
    },
    "selectedSubnetId": "[variables('subnets')[string(equals(length(parameters('subnetId')), 0))]]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgName'))]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "properties": {
        "securityRules": "[variables('selectedSecurityRules')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "apiVersion": "2018-04-01",
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },    
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2017-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[if(equals(length(parameters('subnetId')), 0), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName')) ,'\"}')), json('null'))]",
              "subnet": {
                "id": "[variables('selectedSubnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "zones": "[variables('selectedZones')]",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSizes')[parameters('sapSystemSize')].size]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('images')[parameters('osType')].publisher]",
            "offer": "[variables('images')[parameters('osType')].offer]",
            "sku": "[variables('images')[parameters('osType')].sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[variables('images')[parameters('osType')].osDiskSize]",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "value": {
            "copy": [
              {
                "name": "dataDisks",
                "count": "[length(variables('dataDiskSizes'))]",
                "input": {
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty",
                  "diskSizeGB": "[variables('dataDiskSizes')[copyIndex('dataDisks')].size]"
                }
              }
            ]
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },    
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/', variables('csExtension')[variables('internalOSType')].Name)]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "[variables('csExtension')[variables('internalOSType')].Publisher]",
        "type": "[variables('csExtension')[variables('internalOSType')].Name]",
        "typeHandlerVersion": "[variables('csExtension')[variables('internalOSType')].Version]",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('csExtension')[variables('internalOSType')].script]"
          ],
          "commandToExecute": "[concat(variables('csExtension')[variables('internalOSType')].scriptCall, ' ', variables('vmSizes')[parameters('sapSystemSize')].scriptArgs)]"
        }
      }
    }
  ]
}
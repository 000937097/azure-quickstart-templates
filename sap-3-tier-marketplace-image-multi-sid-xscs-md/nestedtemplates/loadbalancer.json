{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the the load balancer"
            }
        },
        "sapSystemCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of SAP systems for which the load balancer should be configured"
            }
        },
        "stackType": {
            "type": "string",
            "defaultValue": "ABAP",
            "metadata": {
                "description": "The stack type of the SAP system."
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Windows",
            "metadata": {
                "description": "The type of the Operating System"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subnet you want to use."
            }
        },
        "location": {
          "type": "string",
          "metadata": {
            "description": "Location for all resources."
          }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sap-file-server-md/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "ascsInstanceNumber": 0,
        "scsInstanceNumber": 1,
        "ersASCSInstanceNumber": 2,
        "ersSCSInstanceNumber": 3,
        "nestedDeploymentNameLBSCS": "[concat(parameters('loadBalancerName'), 'LBSCS')]",
        "nestedDeploymentNameLBERS": "[concat(parameters('loadBalancerName'), 'LBERS')]",
        "scsTemplate": "[concat('lb-SCS.json')]",
        "ersTemplate": "[concat('lb-ERS-', parameters('osType'), '.json')]"
    },
    "resources": [        
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('nestedDeploymentNameLBSCS'), copyIndex())]",
            "type": "Microsoft.Resources/deployments",            
            "copy": {
                "name": "scsLoop",
                "count": "[parameters('sapSystemCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('scsTemplate'), parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "loadBalancerName": {
                        "value": "[parameters('loadBalancerName')]"
                    },
                    "stackType": {
                        "value": "[parameters('stackType')]"
                    },
                    "osType": {
                        "value": "[parameters('osType')]"
                    },
                    "ascsInstanceNumber": {
                        "value": "[add(mul(copyIndex(), 10), variables('ascsInstanceNumber'))]"
                    },
                    "scsInstanceNumber": {
                        "value": "[add(mul(copyIndex(), 10), variables('scsInstanceNumber'))]"
                    },
                    "subnetId": {
                        "value": "[parameters('subnetId')]"
                    },
                    "nicBackAddressPoolsArray": {
                        "value": "[if(equals(copyIndex(), 0), json('[]'), reference(concat(variables('nestedDeploymentNameLBSCS'), copyIndex(-1))).outputs.nicBackAddressPools.value)]"
                    },
                    "frontendIPConfigurationsArray": {
                        "value": "[if(equals(copyIndex(), 0), json('[]'), reference(concat(variables('nestedDeploymentNameLBSCS'), copyIndex(-1))).outputs.frontendIPConfigurations.value)]"
                    },
                    "backendAddressPoolsArray": {
                        "value": "[if(equals(copyIndex(), 0), json('[]'), reference(concat(variables('nestedDeploymentNameLBSCS'), copyIndex(-1))).outputs.backendAddressPools.value)]"
                    },
                    "loadBalancingRulesArray": {
                        "value": "[if(equals(copyIndex(), 0), json('[]'), reference(concat(variables('nestedDeploymentNameLBSCS'), copyIndex(-1))).outputs.loadBalancingRules.value)]"
                    },
                    "probesArray": {
                        "value": "[if(equals(copyIndex(), 0), json('[]'), reference(concat(variables('nestedDeploymentNameLBSCS'), copyIndex(-1))).outputs.probes.value)]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('nestedDeploymentNameLBERS'), '0')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/lb-ERS0.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "stackType": {
                        "value": "[parameters('stackType')]"
                    },
                    "loadBalancerName": {
                        "value": "[parameters('loadBalancerName')]"
                    },
                    "subnetId": {
                        "value": "[parameters('subnetId')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('nestedDeploymentNameLBERS'), copyIndex(1))]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameLBERS'), '0')]"
            ],
            "copy": {
                "name": "ersLoop",
                "count": "[parameters('sapSystemCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('ersTemplate'), parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "loadBalancerName": {
                        "value": "[parameters('loadBalancerName')]"
                    },
                    "stackType": {
                        "value": "[parameters('stackType')]"
                    },
                    "ersASCSInstanceNumber": {
                        "value": "[add(mul(copyIndex(), 10), variables('ersASCSInstanceNumber'))]"
                    },
                    "ersSCSInstanceNumber": {
                        "value": "[add(mul(copyIndex(), 10), variables('ersSCSInstanceNumber'))]"
                    },
                    "subnetId": {
                        "value": "[parameters('subnetId')]"
                    },
                    "nicBackAddressPoolsArray": {
                        "value": "[reference(concat(variables('nestedDeploymentNameLBERS'), copyIndex())).outputs.nicBackAddressPools.value]"
                    },
                    "frontendIPConfigurationsArray": {
                        "value": "[reference(concat(variables('nestedDeploymentNameLBERS'), copyIndex())).outputs.frontendIPConfigurations.value]"
                    },
                    "backendAddressPoolsArray": {
                        "value": "[reference(concat(variables('nestedDeploymentNameLBERS'), copyIndex())).outputs.backendAddressPools.value]"
                    },
                    "loadBalancingRulesArray": {
                        "value": "[reference(concat(variables('nestedDeploymentNameLBERS'), copyIndex())).outputs.loadBalancingRules.value]"
                    },
                    "probesArray": {
                        "value": "[reference(concat(variables('nestedDeploymentNameLBERS'), copyIndex())).outputs.probes.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('loadBalancerName')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "scsLoop",
                "ersLoop",
                "dbLoop"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "frontendIPConfigurations": "[concat(reference(concat(variables('nestedDeploymentNameLBSCS'), parameters('sapSystemCount'))).outputs.frontendIPConfigurations.value, reference(concat(variables('nestedDeploymentNameLBERS'), parameters('sapSystemCount'))).outputs.frontendIPConfigurations.value, reference(concat(variables('nestedDeploymentNameLBDB'), parameters('sapSystemCount'))).outputs.frontendIPConfigurations.value)]",
                "backendAddressPools": "[concat(reference(concat(variables('nestedDeploymentNameLBSCS'), parameters('sapSystemCount'))).outputs.backendAddressPools.value, reference(concat(variables('nestedDeploymentNameLBERS'), parameters('sapSystemCount'))).outputs.backendAddressPools.value, reference(concat(variables('nestedDeploymentNameLBDB'), parameters('sapSystemCount'))).outputs.backendAddressPools.value)]",
                "loadBalancingRules": "[concat(reference(concat(variables('nestedDeploymentNameLBSCS'), parameters('sapSystemCount'))).outputs.loadBalancingRules.value, reference(concat(variables('nestedDeploymentNameLBERS'), parameters('sapSystemCount'))).outputs.loadBalancingRules.value, reference(concat(variables('nestedDeploymentNameLBDB'), parameters('sapSystemCount'))).outputs.loadBalancingRules.value)]",
                "probes": "[concat(reference(concat(variables('nestedDeploymentNameLBSCS'), parameters('sapSystemCount'))).outputs.probes.value, reference(concat(variables('nestedDeploymentNameLBERS'), parameters('sapSystemCount'))).outputs.probes.value, reference(concat(variables('nestedDeploymentNameLBDB'), parameters('sapSystemCount'))).outputs.probes.value)]"
            }
        }
    ],
    "outputs": {
        "nicBackAddressPools": {
            "value": "[concat(reference(concat(variables('nestedDeploymentNameLBSCS'), parameters('sapSystemCount'))).outputs.nicBackAddressPools.value, reference(concat(variables('nestedDeploymentNameLBERS'), parameters('sapSystemCount'))).outputs.nicBackAddressPools.value, reference(concat(variables('nestedDeploymentNameLBDB'), parameters('sapSystemCount'))).outputs.nicBackAddressPools.value)]",
            "type": "array"
        }
    }
}
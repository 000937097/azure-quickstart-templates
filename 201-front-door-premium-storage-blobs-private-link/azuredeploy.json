{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageSkuName": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ]
    },
    "storageBlobContainerName": {
      "type": "string"
    },
    "frontDoorEndpointName": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "frontDoorSkuName": "Premium_AzureFrontDoor"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "accountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "skuName": {
            "value": "[parameters('storageSkuName')]"
          },
          "blobContainerName": {
            "value": "[parameters('storageBlobContainerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string"
            },
            "accountName": {
              "type": "string"
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
              ]
            },
            "blobContainerName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[parameters('accountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "[parameters('skuName')]"
              },
              "properties": {
                "networkAcls": {
                  "defaultAction": "Deny"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2020-08-01-preview",
              "name": "[format('{0}/default/{1}', parameters('accountName'), parameters('blobContainerName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
              ]
            }
          ],
          "outputs": {
            "blobEndpointHostName": {
              "type": "string",
              "value": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))).primaryEndpoints.blob, 'https://', ''), '/', '')]"
            },
            "storageResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
            },
            "storageLocation": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), '2019-06-01', 'full').location]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "front-door",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "skuName": {
            "value": "[variables('frontDoorSkuName')]"
          },
          "endpointName": {
            "value": "[parameters('frontDoorEndpointName')]"
          },
          "originHostName": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'storage'), '2019-10-01').outputs.blobEndpointHostName.value]"
          },
          "originPath": {
            "value": "[format('/{0}', parameters('storageBlobContainerName'))]"
          },
          "privateEndpointResourceId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'storage'), '2019-10-01').outputs.storageResourceId.value]"
          },
          "privateLinkResourceType": {
            "value": "blob"
          },
          "privateEndpointLocation": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "originHostName": {
              "type": "string"
            },
            "originPath": {
              "type": "string",
              "defaultValue": ""
            },
            "endpointName": {
              "type": "string"
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Standard_AzureFrontDoor",
                "Premium_AzureFrontDoor"
              ]
            },
            "originForwardingProtocol": {
              "type": "string",
              "defaultValue": "HttpsOnly",
              "allowedValues": [
                "HttpOnly",
                "HttpsOnly",
                "MatchRequest"
              ]
            },
            "privateEndpointResourceId": {
              "type": "string",
              "defaultValue": ""
            },
            "privateLinkResourceType": {
              "type": "string",
              "defaultValue": ""
            },
            "privateEndpointLocation": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "functions": [],
          "variables": {
            "isPrivateLinkOrigin": "[not(equals(parameters('privateEndpointResourceId'), ''))]",
            "privateLinkOriginDetails": {
              "privateLink": {
                "id": "[parameters('privateEndpointResourceId')]"
              },
              "groupId": "[if(not(equals(parameters('privateLinkResourceType'), '')), parameters('privateLinkResourceType'), null())]",
              "privateLinkLocation": "[parameters('privateEndpointLocation')]",
              "requestMessage": "Please approve this connection."
            },
            "profileName": "MyFrontDoor",
            "originGroupName": "MyOriginGroup",
            "originName": "MyOrigin",
            "routeName": "MyRoute"
          },
          "resources": [
            {
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2020-09-01",
              "name": "[variables('profileName')]",
              "location": "global",
              "sku": {
                "name": "[parameters('skuName')]"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), parameters('endpointName'))]",
              "location": "global",
              "properties": {
                "originResponseTimeoutSeconds": 240,
                "enabledState": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), variables('originGroupName'))]",
              "properties": {
                "loadBalancingSettings": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 3
                },
                "healthProbeSettings": {
                  "probePath": "/",
                  "probeRequestType": "HEAD",
                  "probeProtocol": "Http",
                  "probeIntervalInSeconds": 100
                },
                "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": null
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups/origins",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', format('{0}/{1}', variables('profileName'), variables('originGroupName')), variables('originName'))]",
              "properties": {
                "hostName": "[parameters('originHostName')]",
                "httpPort": 80,
                "httpsPort": 443,
                "originHostHeader": "[parameters('originHostName')]",
                "priority": 1,
                "weight": 1000,
                "sharedPrivateLinkResource": "[if(variables('isPrivateLinkOrigin'), variables('privateLinkOriginDetails'), null())]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[0], split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', format('{0}/{1}', variables('profileName'), parameters('endpointName')), variables('routeName'))]",
              "properties": {
                "customDomains": [],
                "originGroup": {
                  "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[0], split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[1])]"
                },
                "originPath": "[if(not(equals(parameters('originPath'), '')), parameters('originPath'), null())]",
                "ruleSets": null,
                "supportedProtocols": [
                  "Http",
                  "Https"
                ],
                "patternsToMatch": [
                  "/*"
                ],
                "compressionSettings": {
                  "contentTypesToCompress": [
                    "application/eot",
                    "application/font",
                    "application/font-sfnt",
                    "application/javascript",
                    "application/json",
                    "application/opentype",
                    "application/otf",
                    "application/pkcs7-mime",
                    "application/truetype",
                    "application/ttf",
                    "application/vnd.ms-fontobject",
                    "application/xhtml+xml",
                    "application/xml",
                    "application/xml+rss",
                    "application/x-font-opentype",
                    "application/x-font-truetype",
                    "application/x-font-ttf",
                    "application/x-httpd-cgi",
                    "application/x-javascript",
                    "application/x-mpegurl",
                    "application/x-opentype",
                    "application/x-otf",
                    "application/x-perl",
                    "application/x-ttf",
                    "font/eot",
                    "font/ttf",
                    "font/otf",
                    "font/opentype",
                    "image/svg+xml",
                    "text/css",
                    "text/csv",
                    "text/html",
                    "text/javascript",
                    "text/js",
                    "text/plain",
                    "text/richtext",
                    "text/tab-separated-values",
                    "text/xml",
                    "text/x-script",
                    "text/x-component",
                    "text/x-java-source"
                  ],
                  "isCompressionEnabled": true
                },
                "queryStringCachingBehavior": "IgnoreQueryString",
                "forwardingProtocol": "[parameters('originForwardingProtocol')]",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', split(format('{0}/{1}', variables('profileName'), parameters('endpointName')), '/')[0], split(format('{0}/{1}', variables('profileName'), parameters('endpointName')), '/')[1])]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[0], split(format('{0}/{1}', variables('profileName'), variables('originGroupName')), '/')[1])]"
              ]
            }
          ],
          "outputs": {
            "frontDoorEndpointHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles/afdEndpoints', split(format('{0}/{1}', variables('profileName'), parameters('endpointName')), '/')[0], split(format('{0}/{1}', variables('profileName'), parameters('endpointName')), '/')[1])).hostName]"
            },
            "frontDoorId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles', variables('profileName'))).frontDoorId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'storage')]"
      ]
    }
  ],
  "outputs": {
    "frontDoorEndpointHostName": {
      "type": "string",
      "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorEndpointHostName.value]"
    },
    "blobEndpointHostName": {
      "type": "string",
      "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'storage'), '2019-10-01').outputs.blobEndpointHostName.value]"
    }
  }
}
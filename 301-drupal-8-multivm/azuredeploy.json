{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "drupalVmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of Drupal VMs in the VM Scale Set."
      }
    },
    "drupalUbuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.4-LTS",
      "allowedValues": [
        "15.10",
        "14.04.4-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the Drupal VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.10, 14.04.4-LTS."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of Drupal VM instances (100 or less). Atleast 2 are recommended for high availability"
      },
      "maxValue": 100
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all Drupal VMs, Gluster VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all Drupal VMs."
      }
    },
    "mySqlDnsName": {
      "type": "string",
      "metadata": {
        "description": "Connect to your cluster using dnsName.location.cloudapp.azure.com"
      }
    },



    "mySqlVmUserName": {
      "type": "string",
      "metadata": {
        "description": "user name to ssh to the VMs"
      }
    },
    "mySqlVmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password to ssh to the VMs"
      }
    },
    "mysqlRootPassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql root/admin user password"
      }
    },
    "mysqlReplicationPassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql replication user password"
      }
    },
    "mysqlProbePassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql probe password"
      }
    },
    "mySqlVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "size for the mySql VMs"
      }
    },

    "dbCentosOSVersion": {
      "type": "string",
      "defaultValue": "6.6",
      "allowedValues": [
        "6.5",
        "6.6"
      ],
      "metadata": {
        "description": "VM OS version"
      }
    },
    "mysqlFrontEndPort0": {
      "type": "int",
      "defaultValue": 3306,
      "metadata": {
        "description": "MySQL public port"
      }
    },
    "mysqlFrontEndPort1": {
      "type": "int",
      "defaultValue": 3307,
      "metadata": {
        "description": "MySQL public port"
      }
    },
    "sshNatRuleFrontEndPort0": {
      "type": "int",
      "defaultValue": 64001,
      "metadata": {
        "description": "public ssh port for VM1"
      }
    },
    "sshNatRuleFrontEndPort1": {
      "type": "int",
      "defaultValue": 64002,
      "metadata": {
        "description": "public ssh port for VM2"
      }
    },
    "mysqlProbePort0": {
      "type": "int",
      "defaultValue": 9200,
      "metadata": {
        "description": "MySQL public port master"
      }
    },
    "mysqlProbePort1": {
      "type": "int",
      "defaultValue": 9201,
      "metadata": {
        "description": "MySQL public port slave"
      }
    },
    "mysqlTemplateLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mysql-replication/",
      "metadata": {
        "description": "file location for mysql template and my.cnf.template"
      }
    },
    "glusterTemplateLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/gluster-file-system/",
      "metadata": {
        "description": "file location for gluster template"
      }
    },
    "websiteTemplateLocation": {
      "type": "string",
      "defaultValue": "https://github.com/maniSbindra/azure-quickstart-templates/tree/master/301-drupal-8-multivm",
      "metadata": {
        "description": "template file location",
        "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Storage account name prefix for the cluster"
      }
    },
    "glusterVmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "size for the gluster VMs"
      }
    },
    "glusterInstanceCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        6,
        8
      ],
      "metadata": {
        "description": "Number of nodes in the gluster file system"
      }
    }
  },
  "variables": {
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "addressPrefix": "10.0.0.0/16",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "computeApiVersion": "2016-03-30",
    "diagnosticsStorageAccountName": "[concat(variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
    "drupSubnetName": "drupglussubnet",
    "drupSubnetPrefix": "10.0.0.0/24",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "glusterOS": "Ubuntu",
    "glusterStorageAccountName": "[concat('gl',parameters('storageAccountNamePrefix'))]",
    "glusterSubnetName": "drupglussubnet",
    "glusterSubnetPrefix": "10.0.0.0/24",
    "glusterVMIPPrefix": "10.0.0.1",
    "glusterVMNamePrefix": "glus",
    "glusterVnetAddressPrefix": "10.0.0.0/16",
    "glusterVnetName": "drupglusvnet",
    "imageReference": "[variables('osType')]",
    "insightsApiVersion": "2015-04-01",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('bePoolName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
    "location": "[resourceGroup().location]",
    "longNamingInfix": "[toLower(parameters('vmssName'))]",
    "dbImagePublisher": "OpenLogic",
    "dbOS": "CentOS",
    "dbStorageAccountNamePrefix": "[concat('db', parameters('storageAccountNamePrefix'))]",
    "mySqlpublicIPName": "mysqlIP01",
    "mySqlSubnetName": "dbsubnet",
    "mySqlSubnetPrefix": "10.1.1.0/24",
    "mySqlVnetAddressPrefix": "10.1.0.0/16",
    "dbSubnetStartAddress": "10.1.1.4",
    "mySqlVnetName": "dbvnet",
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "natBackendPort": 22,
    "natEndPort": 50119,
    "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
    "natStartPort": 50000,
    "networkApiVersion": "2015-05-01-preview",
    "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('drupalUbuntuOSVersion')]",
      "version": "latest"
    },
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "saCount": "[length(variables('uniqueStringArray'))]",
    "storageAccountType": "Standard_LRS",
    "storageApiVersion": "2015-06-15",
    "templateAPIVersion": "2015-01-01",
    "uniqueStringArray": [
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
    ],
    "vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
    "virtualNetworkName": "drupglusvnet",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
    "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',variables('namingInfix'))]",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>"
  },
  "resources": [
    
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('storageApiVersion')]",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('longNamingInfix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "gluster"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ]
      }
    },

    
    {
      "name": "mysql",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "gluster"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('mysqlTemplateLocation'), '/azuredeploy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsName": { "value": "[parameters('mySqlDnsName')]" },
          "location": { "value": "[variables('location')]" },
          "vmUserName": { "value": "[parameters('mySqlVmUserName')]" },
          "vmPassword": { "value": "[parameters('mySqlVmPassword')]" },
          "mysqlRootPassword": { "value": "[parameters('mysqlRootPassword')]" },
          "mysqlReplicationPassword": { "value": "[parameters('mysqlReplicationPassword')]" },
          "mysqlProbePassword": { "value": "[parameters('mysqlProbePassword')]" },
          "vmSize": { "value": "[parameters('mySqlVmSize')]" },
          "storageAccountType": { "value": "[variables('storageAccountType')]" },
          "virtualNetworkName": { "value": "[variables('mySqlVnetName')]" },
          "vnetNewOrExisting": { "value": "new" },
          "virtualNetworkExistingRGName": { "value": "" },
          "dbSubnetName": { "value": "[variables('mySqlSubnetName')]" },
          "vnetAddressPrefix": { "value": "[variables('mySqlVnetAddressPrefix')]" },
          "dbSubnetAddressPrefix": { "value": "[variables('mySqlSubnetPrefix')]" },
          "dbSubnetStartAddress": { "value": "[variables('dbSubnetStartAddress')]" },
          "imagePublisher": { "value": "[variables('dbImagePublisher')]" },
          "imageOffer": { "value": "[variables('dbOS')]" },
          "imageSKU": { "value": "[parameters('dbCentosOSVersion')]" },
          "mysqlFrontEndPort0": { "value": "[parameters('mysqlFrontEndPort0')]" },
          "mysqlFrontEndPort1": { "value": "[parameters('mysqlFrontEndPort1')]" },
          "sshNatRuleFrontEndPort0": { "value": "[parameters('sshNatRuleFrontEndPort0')]" },
          "sshNatRuleFrontEndPort1": { "value": "[parameters('sshNatRuleFrontEndPort1')]" },
          "mysqlProbePort0": { "value": "[parameters('mysqlProbePort0')]" },
          "mysqlProbePort1": { "value": "[parameters('mysqlProbePort1')]" },
          "artifactsPath": { "value": "[parameters('mysqlTemplateLocation')]" },
          "publicIPName": { "value": "[variables('mySqlpublicIPName')]" },
          "storageAccountNamePrefix": { "value": "[variables('dbStorageAccountNamePrefix')]" }
        }
      }
    },
    {
      "name": "gluster",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('glusterTemplateLocation'), '/azuredeploy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "hostOs": { "value": "[variables('glusterOS')]" },
          "storageAccountName": { "value": "[variables('glusterStorageAccountName')]" },
          "scaleNumber": { "value": "[parameters('glusterInstanceCount')]" },
          "virtualNetworkName": { "value": "[variables('glusterVnetName')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vmSize": { "value": "[parameters('glusterVMSize')]" },
          "vmNamePrefix": { "value": "[variables('glusterVMNamePrefix')]" },
          "vmIPPrefix": { "value": "[variables('glusterVMIPPrefix')]" },
          "vnetAddressPrefix": { "value": "[variables('glusterVnetAddressPrefix')]" },
          "gfsSubnetName": { "value": "[variables('glusterSubnetName')]" },
          "gfsSubnetPrefix": { "value": "[variables('glusterSubnetPrefix')]" },
          "customScriptFilePath": { "value": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/gluster-file-system/azuregfs.sh" },
          "customScriptCommandToExecute": { "value": "bash azuregfs.sh" },
          "volumeName": { "value": "gfsvol" }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "storageLoop",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "mysql",
        "gluster"
      ],
      "sku": {
        "name": "[parameters('drupalVmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[2], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[3], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[4], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]"
              ],
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('drupSubnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "lapextension",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "CustomScriptForLinux",
                  "typeHandlerVersion": "1.4",
                  "autoUpgradeMinorVersion": false,
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/maniSbindra/azure-quickstart-templates/master/301-drupal-8-multivm/install_lap.sh",
                      "https://raw.githubusercontent.com/maniSbindra/azure-quickstart-templates/master/301-drupal-8-multivm/index.php",
                      "https://raw.githubusercontent.com/maniSbindra/azure-quickstart-templates/master/301-drupal-8-multivm/do_work.php"
                    ],
                    "commandToExecute": "bash install_lap.sh"
                  }
                }
              },
              {
                "name": "LinuxDiagnostic",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "LinuxDiagnostic",
                  "typeHandlerVersion": "2.1",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                    "storageAccount": "[variables('diagnosticsStorageAccountName')]"
                  },
                  "protectedSettings": {
                    "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listkeys(variables('accountid'), variables('storageApiVersion')).key1]",
                    "storageAccountEndPoint": "https://core.windows.net"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "[variables('insightsApiVersion')]",
      "name": "autoscalewad",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
        "gluster"
      ],
      "properties": {
        "name": "autoscalewad",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "1",
              "maximum": "10",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "\\Processor\\PercentProcessorTime",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "\\Processor\\PercentProcessorTime",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 50.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              }
            ]
          }
        ]
      }
    }


  ]
}

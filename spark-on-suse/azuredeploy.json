{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "securestring",
      "metadata": {
        "description": "The Linux VM user name"
      }
    },
    "adminPassword": { "type": "securestring",
      "metadata": {
        "description": "The LInux VM password"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/spark-on-suse/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
	"resourceGroupLocation": "[resourceGroup().location]",
	"vmStorageAccountContainerName": "vhd",
	"storageAccountName": "[concat(uniquestring(resourceGroup().id),'storageacc')]",
	"virtualMachines_spark01_name": "sparkMaster",
	"sparkSlavesName": "sparkslave",
	"sparkMasterSize": "Basic_A3",
	"sparkSlavesSize": "Basic_A2",
	"sparkMasterPublicIpName": "sparkMasterPublicIp",
	"sparkNetWorkSecurityGroupName": "nsgroup",
	"sparkVirtualNetworkName": "sparkVirtualNetwork",
	"sparkMasterNetworkInterfaceName": "ni_master",
	"sparkSlaveNetworkInterfaceName": "ni_slave1",
	"sparkMasterInternalIP": "10.0.0.4",
	"sparkSlaveInternalIP": "10.0.0.5",
	"scriptUrl": "[parameters('_artifactsLocation')]",
	"ScriptFolder" : "scripts",
	"sparkInstallScriptName": "install_spark_environment.sh",
	"numberOfSlavesInstances": "1"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_spark01_name')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sparkMasterNetworkInterfaceName'))]"
            }
          ]
        },
        "hardwareProfile": {
          "vmSize": "[variables('sparkMasterSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "SUSE",
            "offer": "SLES",
            "sku": "12-SP1",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_spark01_name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/','osdisks', '1' ,'.vhd')]"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computername": "sparkmaster",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('sparkMasterNetworkInterfaceName'))]"
      ]
    },
	{
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('sparkSlavesName'), '1')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sparkSlaveNetworkInterfaceName'))]"
            }
          ]
        },
        "hardwareProfile": {
          "vmSize": "[variables('sparkSlavesSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "SUSE",
            "offer": "SLES",
            "sku": "12-SP1",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('sparkSlavesName'),'1')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/','osdisks', '_slave1' ,'.vhd')]"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computername": "sparkmaster",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('sparkSlaveNetworkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('sparkMasterNetworkInterfaceName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'sparkMasterPublicIp' )]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
      ],
	  "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sparkMasterInternalIP')]",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sparkMasterPublicIpName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
        }
      }
    },
	{
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('sparkSlaveNetworkInterfaceName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
      ],
	  "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sparkSlaveInternalIP')]",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('sparkMasterPublicIpName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('sparkVirtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('sparkNetWorkSecurityGroupName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "SparkUI",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "4040",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "SparkMaster",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
          {
            "name": "SparkHistoryServer",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "18080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1030,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": { "name": "Standard_LRS", "tier": "Standard" },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('resourceGroupLocation')]",
      "tags": {},
      "properties": {}
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('sparkmaster', '/configuresparkonmaster')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_spark01_name') )]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('sparkMasterNetworkInterfaceName') )]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('sparkInstallScriptName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('sudo sh install_spark_environment.sh', parameters('_artifactsLocationSasToken'))]"
        }
      }
    }
  ],
  "outputs": {}
}
{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "The prefix name of machines. The machine names will be {prefix}DC, {prefix}PS1 and {prefix}MPDP. "
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "The name of the administrator account of the new VM. "
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Input must meet password complexity requirements as documented for property 'adminPassword' in https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/virtualmachines-create-or-update"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sccm-currentbranch/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "Quotes": "\"",
    "containerName": "[concat(toLower(parameters('prefix')), 'container')]",
    "virtualNetworkName": "[concat(toLower(parameters('prefix')), '-vnet')]",
    "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "generalSettings": {
      "domainName": "contoso.com",
      "storageAccountType": "Standard_LRS"
    },
    "networkSettings": {
      "virtualNetworkAddressPrefix": "10.0.0.0/16",
      "subnetAddressPrefix": "10.0.0.0/24",
      "virtualMachinesIPAddress": "10.0.0.",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'default')]",
      "privateIPAllocationMethod": "Static",
      "publicIpAllocationMethod": "Dynamic"
    },
    "securityGroupRule": {
      "name": "default-allow-rdp",
      "priority": 1000,
      "sourceAddressPrefix": "*",
      "protocol": "Tcp",
      "destinationPortRange": "3389",
      "access": "Allow",
      "direction": "Inbound",
      "sourcePortRange": "*",
      "destinationAddressPrefix": "*"
    },
    "vmrole": [
      "DC",
      "DPMP",
      "Client",
      "PS1"
    ],
    "vmname": [
      "DC01",
      "DPMP01",
      "Cl01",
      "PS01"
    ],
    "vmDiskType": [
      "Premium_LRS",
      "Premium_LRS",
      "Premium_LRS",
      "Premium_LRS"
    ],
    "vmSize": [
      "Standard_B2s",
      "Standard_B2s",
      "Standard_B2s",
      "Standard_B2ms"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[copyIndex()])]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmcopy",
        "count": 3
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', toLower(parameters('prefix')), '-ni-',variables('vmrole')[copyIndex()])]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('vmname')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')[copyIndex()]]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('prefix'),variables('vmrole')[copyIndex()],'-OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('vmDiskType')[copyIndex()]]"
            },
            "diskSizeGB": 150
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(toLower(parameters('prefix')), '-ni-',variables('vmrole')[copyIndex()]))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[0],'/WorkFlow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('prefix'),variables('vmrole')[0])]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[Uri(parameters('_artifactsLocation'),concat('DSC/DCConfiguration.zip',parameters('_artifactsLocationSasToken')))]",
          "configurationFunction": "DCConfiguration.ps1\\DCConfiguration",
          "Properties": {
            "DomainName": "[variables('generalSettings').domainName]",
            "DPMPName": "[concat(parameters('prefix'),variables('vmrole')[1])]",
            "ClientName": "[concat(parameters('prefix'),variables('vmrole')[2])]",
            "PSName": "[concat(parameters('prefix'),variables('vmrole')[3])]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[3],'/WorkFlow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('prefix'),variables('vmrole')[3])]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[Uri(parameters('_artifactsLocation'),concat('DSC/DCConfiguration.zip',parameters('_artifactsLocationSasToken')))]",
          "configurationFunction": "PSConfiguration.ps1\\PSConfiguration",
          "Properties": {
            "DomainName": "[variables('generalSettings').domainName]",
            "DCName": "[concat(parameters('prefix'),variables('vmrole')[0])]",
            "DPMPName": "[concat(parameters('prefix'),variables('vmrole')[1])]",
            "ClientName": "[concat(parameters('prefix'),variables('vmrole')[2])]",
            "DNSIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(int('0'),int('4')))]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[2],'/WorkFlow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('prefix'),variables('vmrole')[2])]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[Uri(parameters('_artifactsLocation'),concat('DSC/DCConfiguration.zip',parameters('_artifactsLocationSasToken')))]",
          "configurationFunction": "ClientConfiguration.ps1\\ClientConfiguration",
          "Properties": {
            "DomainName": "[variables('generalSettings').domainName]",
            "PSName": "[concat(parameters('prefix'),variables('vmrole')[3])]",
            "DCName": "[concat(parameters('prefix'),variables('vmrole')[0])]",
            "DNSIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(int('0'),int('4')))]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[1],'/WorkFlow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('prefix'),variables('vmrole')[1])]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[Uri(parameters('_artifactsLocation'),concat('DSC/DCConfiguration.zip',parameters('_artifactsLocationSasToken')))]",
          "configurationFunction": "DPMPConfiguration.ps1\\DPMPConfiguration",
          "Properties": {
            "DomainName": "[variables('generalSettings').domainName]",
            "PSName": "[concat(parameters('prefix'),variables('vmrole')[3])]",
            "DCName": "[concat(parameters('prefix'),variables('vmrole')[0])]",
            "DNSIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(int('0'),int('4')))]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-08-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').virtualNetworkAddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "[variables('networkSettings').subnetAddressPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(toLower(parameters('prefix')), '-ni-',variables('vmrole')[copyIndex()])]",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicopy",
        "count": 4
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', toLower(parameters('prefix')), '-ip-',variables('vmrole')[copyIndex()])]",
        "[concat('Microsoft.Network/networkSecurityGroups/', toLower(parameters('prefix')), '-nsg')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('networkSettings').subnetRef]"
              },
              "privateIPAllocationMethod": "[variables('networkSettings').privateIPAllocationMethod]",
              "privateIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(copyIndex(),int('4')))]",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(toLower(parameters('prefix')), '-ip-',variables('vmrole')[copyIndex()]))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(toLower(parameters('prefix')), '-nsg'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2018-08-01",
      "name": "[concat(toLower(parameters('prefix')), '-ip-',variables('vmrole')[copyIndex()])]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "ipcopy",
        "count": 4
      },
      "properties": {
        "publicIpAllocationMethod": "[variables('networkSettings').publicIpAllocationMethod]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "name": "[concat(toLower(parameters('prefix')), '-nsg')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "[variables('securityGroupRule').name]",
            "properties": {
              "priority": "[variables('securityGroupRule').priority]",
              "sourceAddressPrefix": "[variables('securityGroupRule').sourceAddressPrefix]",
              "protocol": "[variables('securityGroupRule').protocol]",
              "destinationPortRange": "[variables('securityGroupRule').destinationPortRange]",
              "access": "[variables('securityGroupRule').access]",
              "direction": "[variables('securityGroupRule').direction]",
              "sourcePortRange": "[variables('securityGroupRule').sourcePortRange]",
              "destinationAddressPrefix": "[variables('securityGroupRule').destinationAddressPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('prefix'),variables('vmrole')[3])]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', toLower(parameters('prefix')), '-ni-',variables('vmrole')[3])]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('vmname')[3]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')[3]]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016SP1-WS2016",
            "sku": "Standard",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('vmDiskType')[3]]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(toLower(parameters('prefix')), '-ni-',variables('vmrole')[3]))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    }
  ],
  "outputs": {

  }
}


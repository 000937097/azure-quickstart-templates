{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "Specifies the name of the Azure Machine Learning workspace."
        }
      },
      "location": {
        "type": "string",
        "allowedValues": [
          "australiaeast",
          "brazilsouth",
          "canadacentral",
          "centralus",
          "eastasia",
          "eastus",
          "eastus2",
          "francecentral",
          "japaneast",
          "koreacentral",
          "northcentralus",
          "northeurope",
          "southeastasia",
          "southcentralus",
          "uksouth",
          "westcentralus",
          "westus",
          "westus2",
          "westeurope"
        ],
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "sku": {
        "type": "string",
        "defaultValue": "basic",
        "allowedValues": [
          "basic",
          "enterprise"
        ],
        "metadata": {
          "description": "Specifies the sku, also referred as 'edition' of the Azure Machine Learning workspace."
        }
      },
      "storageAccountNewOrExisting": {
        "type": "string",
        "defaultValue": ""
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[concat('sa',uniqueString(resourceGroup().id))]"
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Standard_ZRS",
          "Premium_LRS",
          "Premium_ZRS",
          "Standard_GZRS",
          "Standard_RAGZRS"
        ]
      },
      "keyVaultNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "metadata": {
          "description": "Determines whether or not a key vault should be provisioned."
        }
      },
      "keyVaultName": {
        "type": "string",
        "defaultValue": "[concat('kv',uniqueString(resourceGroup().id))]"
      },
      "applicationInsightsNewOrExisting": {
        "type": "string",
        "defaultValue": ""
      },
      "applicationInsightsName": {
        "type": "string",
        "defaultValue": "[concat('ai',uniqueString(resourceGroup().id))]"
      },
      "containerRegistryNewOrExisting": {
        "type": "string",
        "defaultValue": ""
      },
      "containerRegistryName": {
        "type": "string",
        "defaultValue": "[concat('acr',uniqueString(resourceGroup().id))]"
      },
      "containerRegistrySku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Basic",
          "Standard",
          "Premium"
        ]
      },
      "confidential_data":{
        "type": "string",
        "defaultValue": "false",
          "allowedValues": [
            "false",
            "true"
          ],
          "metadata": {
            "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
          }
      },
      "encryption_status":{
        "type": "string",
        "defaultValue": "Disabled",
          "allowedValues": [
            "Enabled",
            "Disabled"
          ],
          "metadata": {
            "description": "Specifies if the Azure Machine Learning workspace should be encrypted with customer managed key."
          }
      },
      "cmk_keyvault":{
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Specifies the customer managed keyVault arm id."
        }
      },
      "resource_cmk_uri":{
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Specifies if the customer managed keyvault key uri."
        }
      }
  },
  "variables": {
      "tenantId": "[subscription().tenantId]",
      "storageAccount": "[if(equals(parameters('storageAccountNewOrExisting'), 'new'), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('storageAccountNewOrExisting'))]",
      "keyVault": "[if(equals(parameters('keyVaultNewOrExisting'), 'new'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), parameters('keyVaultNewOrExisting'))]",
      "applicationInsights": "[if(equals(parameters('applicationInsightsNewOrExisting'), 'new'), resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), parameters('applicationInsightsNewOrExisting'))]",
      "containerRegistry": "[if(equals(parameters('containerRegistryNewOrExisting'), 'new'), resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), parameters('containerRegistryNewOrExisting'))]"
  },
  "resources": [
      {
          "condition": "[equals(parameters('storageAccountNewOrExisting'), 'new')]",
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2019-04-01",
          "name": "[parameters('storageAccountName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[parameters('storageAccountType')]"
          },
          "kind": "StorageV2",
          "properties": {
              "encryption": {
                  "services": {
                      "blob": {
                          "enabled": true
                      },
                      "file": {
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              },
              "supportsHttpsTrafficOnly": true
          }
      },
      {
          "condition": "[equals(parameters('keyVaultNewOrExisting'), 'new')]",
          "type": "Microsoft.KeyVault/vaults",
          "apiVersion": "2019-09-01",
          "name": "[parameters('keyVaultName')]",
          "location": "[parameters('location')]",
          "properties": {
              "tenantId": "[variables('tenantId')]",
              "sku": {
                  "name": "standard",
                  "family": "A"
              },
              "accessPolicies": []
          }
      },
      {
          "condition": "[equals(parameters('applicationInsightsNewOrExisting'), 'new')]",
          "type": "Microsoft.Insights/components",
          "apiVersion": "2018-05-01-preview",
          "name": "[parameters('applicationInsightsName')]",
          "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'westcentralus')),'southcentralus',parameters('location'))]",
          "kind": "web",
          "properties": {
              "Application_Type": "web"
          }
      },
      {
          "condition": "[equals(parameters('containerRegistryNewOrExisting'), 'new')]",
          "type": "Microsoft.ContainerRegistry/registries",
          "apiVersion": "2019-05-01",
          "name": "[parameters('containerRegistryName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[parameters('containerRegistrySku')]"
          },
          "properties": {
              "adminUserEnabled": true
          }
      },
      {
          "type": "Microsoft.MachineLearningServices/workspaces",
          "apiVersion": "2020-03-01",
          "name": "[parameters('workspaceName')]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[variables('storageAccount')]",
              "[variables('keyVault')]",
              "[variables('applicationInsights')]",
              "[variables('containerRegistry')]"
          ],
          "identity": {
              "type": "systemAssigned"
          },
          "sku": {
              "tier": "[parameters('sku')]",
              "name": "[parameters('sku')]"
          },
          "properties": {
              "friendlyName": "[parameters('workspaceName')]",
              "storageAccount": "[variables('storageAccount')]",
              "keyVault": "[variables('keyVault')]",
              "applicationInsights": "[variables('applicationInsights')]",
              "encryption": {
                  "status": "[parameters('encryption_status')]",
                  "keyVaultProperties": {
                      "keyVaultArmId": "[parameters('cmk_keyvault')]",
                      "keyIdentifier": "[parameters('resource_cmk_uri')]"
                  }
              },
              "hbiWorkspace": "[parameters('confidential_data')]"
          }
      }
  ]
}
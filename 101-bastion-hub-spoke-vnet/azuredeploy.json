{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vNetHubName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vnet-hub"
        },
        "vNetSpokeName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vnet-spoke"
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vm1"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "bastionHostName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "bastion1"
        }
    },
    "functions": [],
    "variables": {
        "vNetHubPrefix": "10.0.0.0/16",
        "subnetBastionName": "AzureBastionSubnet",
        "subnetBastionPrefix": "10.0.0.0/27",
        "vNetSpokePrefix": "10.1.0.0/16",
        "subnetSpokeName": "Subnet-1",
        "subnetSpokePrefix": "10.1.0.0/24",
        "publicIPName": "pip-bastion-01",
        "nsgName": "nsg-subnet-1"
    },
    "resources": [{
        "name": "[parameters('vNetHubName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('vNetHubPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('subnetBastionName')]",
                    "properties": {
                        "addressPrefix": "[variables('subnetBastionPrefix')]"
                    }
                    
                }
            ]
        }
    },
    {
        "name": "[parameters('vNetSpokeName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('vNetSpokePrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('subnetSpokeName')]",
                    "properties": {
                        "addressPrefix": "[variables('subnetSpokePrefix')]"
                    }
                }
            ]
        }
    },
    {
        "name": "[concat(parameters('vNetHubName'),'/peering-to-',parameters('vNetSpokeName'))]",
        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "apiVersion": "2019-11-01",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeName'))]"
        ],
        "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNetSpokeName'))]"
            }
        }
    },
    {
        "name": "[concat(parameters('vNetSpokeName'),'/peering-to-',parameters('vNetHubName'))]",
        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "apiVersion": "2019-11-01",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeName'))]"
        ],        
        "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNetHubName'))]"
            }
        }
    },
    {
        "name": "[variables('nsgName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [
                {
                    "name": "nsgRule1",
                    "properties": {
                        "description": "description",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('publicIPName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Static"
        },
        "sku": {
            "name": "Standard"
        }
    },
    {
        "name": "[parameters('bastionHostName')]",
        "type": "Microsoft.Network/bastionHosts",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": ["[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"],
        "properties": {
            "ipConfigurations": [
            {
                "properties": {
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vNetHubName'),variables('subnetBastionName'))]"
                    },
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName'))]"
                    },
                    "privateIPAllocationMethod": "Dynamic"
                },
                "name": "ipconfig1"
            }
            ]
        }
    },
    {
        "name": "[toLower(parameters('storageAccountName'))]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "Standard_LRS"
        },
        "kind": "Storage"
    },
    {
        "name": "[concat(parameters('vmName'),'-nic-01')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
        ],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetSpokeName'),variables('subnetSpokeName'))]"
                        }
                    }
                }
            ],
            "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
            }
        }
    },
    {
        "name": "[parameters('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-nic-01'))]",
            "[resourceId('Microsoft.Storage/storageAccounts',toLower(parameters('storageAccountName')))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
            },
            "osProfile": {
                "computerName": "[parameters('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "16.04-LTS",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('vmName'),'-os-01')]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-nic-01'))]"
                    }
                ]
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(parameters('storageAccountName')))).primaryEndpoints.blob]"
                }
            }
        }
    }],
    "outputs": {}
}
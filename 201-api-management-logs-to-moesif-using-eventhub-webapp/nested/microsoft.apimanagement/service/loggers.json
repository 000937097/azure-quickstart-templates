{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ExistingApiManagementResourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of api management service eg: 'blue-api-mgmt-v2'"
            }
        },
        "LogToEventhubLoggerId": {
            "type": "string",
            "metadata": {
                "description": "The name of log-to-eventhub 'logger-id' referred to in policy xml"
            }
        },
        "eventHubLoggerConnStr": {
            "type": "string",
            "metadata": {
                "description": "EventHub connection string to send / publish logs"
            }
        },
        "tags": {
            "type": "Object",
            "defaultValue": {
                "purpose": "demo"
            }
        }
    },
    "functions": [],
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service/loggers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('ExistingApiManagementResourceName'), '/', parameters('LogToEventhubLoggerId'))]",
            "tags": "[parameters('tags')]",
            "dependsOn": [],
            "properties": {
                "loggerType": "azureEventHub",
                "description": "This logger logs to event hub",
                "credentials": {
                    "name": "[concat('credentials-', parameters('LogToEventhubLoggerId'))]",
                    "connectionString": "[parameters('eventHubLoggerConnStr')]"
                }
            }
        }
    ],
    "outputs": {
        "LogToEventhubLoggerId": {
            "type": "string",
            "value": "[parameters('LogToEventhubLoggerId')]"
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('ExistingApiManagementResourceName'), parameters('LogToEventhubLoggerId'))]"
        }
    }
}
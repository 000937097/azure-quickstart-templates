{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Azure Web App"
            }
        },
        "appServiceTier": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "description": "Choose a Web Apps pricing tier. It defaults to Basic"
            }
        },
        "appServiceWorkerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0",
            "metadata": {
                "description": "Worker Size (0=Small, 1=Medium, 2=Large)"
            }
        },
        "dbServerName": {
            "type": "string",
            "metadata": {
                "description": "SQL Azure DB Server name"
            }
        },
        "dbAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "Make sure your login name meets the following requirements - It's a SQL Identifier, and not a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.), or a built-in database user or role (like dbo, guest, public, etc.). Make sure your name doesn't contain whitespaces, unicode characters, or nonalphabetic characters, and that it doesn't begin with numbers or symbols."
            }
        },
        "dbAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database admin user password"
            }
        },
        "dbName": {
            "type": "string",
            "metadata": {
                "description": "Database Name"
            }
        },
        "dbEdition": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "SQL DB appServiceTier: Standard, Premium"
            }
        },
        "nonAdminDatabaseUserName": {
            "type": "string",
            "metadata": {
                "description": "Non-admin Database User. Must be Unique"
            }
        },
        "nonAdminDatabasePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Non-admin Database User password"
            }
        }
    },
    "variables": {
        "appServicePlanName":"[concat(parameters('appName'), 'serviceplan')]",
        "mediaServicesAccountName": "[concat('media',uniqueString(resourceGroup().id))]",
        "storageAccountName": "[concat('storage',uniqueString(resourceGroup().id))]",
        "storageAccountType": "Standard_LRS"
    },
    "resources": [
        {
            "name": "[parameters('dbServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "properties": {
                "administratorLogin": "[parameters('dbAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('dbAdministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01-preview",
                    "name": "[parameters('dbName')]",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('dbServerName'))]"
                    ],
                    "properties": {
                        "edition": "[parameters('dbEdition')]",
                        "collation": "[string('SQL_Latin1_General_CP1_CI_AS')]",
                        "requestedServiceObjectiveId": "F1173C43-91BD-4AAA-973C-54E79E15235B"
                    }
                },
                {
                    "apiVersion": "2014-04-01-preview",
                    "name": "AllowAllWindowsAzureIps",
                    "type": "firewallrules",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('dbServerName'))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "2014-06-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "appServiceTier": "[parameters('appServiceTier')]",
                "workerSize": "[parameters('appServiceWorkerSize')]",
                "hostingEnvironment": "",
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Media/mediaServices",
            "name": "[variables('mediaServicesAccountName')]",
            "apiVersion": "2015-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "storageAccounts": [
                    {
                        "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "isPrimary": true
                    }
                ]
            },
            "resources": [],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
             },
            "kind": "Storage",
            "properties": {
            }
        },
        {
            "apiVersion": "2015-02-01",
            "name": "[parameters('appName')]",
            "type": "Microsoft.Web/Sites",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "empty"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
            ],
            "properties": {
                "name": "[parameters('appName')]",
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/',resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                "hostingEnvironment": ""
            },
            "resources": [
                {
                    "apiVersion": "2015-04-01",
                    "name": "MSDeploy",
                    "type": "Extensions",
                    "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', parameters('appName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('dbServerName'), '/databases/', parameters('dbName'))]",
                        "[concat('Microsoft.Media/mediaservices/', variables('mediaServicesAccountName'))]"
                    ],
                    "properties": {
                        "packageUri": "https://orchardamstest.blob.core.windows.net/packages/Orchard.Web.1.10.x-AMS.zip",
                        "dbType": "SQL",
                        "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('dbName'), ';User Id=', parameters('dbAdministratorLogin'), '@', parameters('dbServerName'), ';Password=', parameters('dbAdministratorLoginPassword'), ';')]",
                        "setParameters": {
                            "Application Path": "[parameters('appName')]",
                            "Database Server": "[reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName]",
                            "Database Name": "[parameters('dbName')]",
                            "Database Username": "[parameters('nonAdminDatabaseUserName')]",
                            "Database Password": "[parameters('nonAdminDatabasePassword')]",
                            "Database Administrator": "[parameters('dbAdministratorLogin')]",
                            "Database Administrator Password": "[parameters('dbAdministratorLoginPassword')]"
                        }
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "connectionstrings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('appName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('dbServerName'), '/databases/', parameters('dbName'))]",
                        "[concat('Microsoft.Web/Sites/', parameters('appName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "defaultConnection": {
                            "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('dbName'), ';User Id=', parameters('dbAdministratorLogin'), '@', parameters('dbServerName'), ';Password=', parameters('dbAdministratorLoginPassword'), ';')]",
                            "type": "SQLAzure"
                        }
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('appName'))]",
                        "[concat('Microsoft.Media/mediaservices/', variables('mediaServicesAccountName'))]",
                        "[concat('Microsoft.Web/Sites/', parameters('appName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "defaultRecipe": "Video Portal",
                        "Azure.MediaServices.AccountName": "[variables('mediaServicesAccountName')]",
                        "Azure.MediaServices.AccountKey": "[listKeys(resourceId('Microsoft.Media/mediaservices', variables('mediaServicesAccountName')), providers('Microsoft.Media', 'mediaservices').apiVersions[0]).primaryKey]",
                        "Azure.MediaServices.StorageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', parameters('appName'))]",
                        "[concat('Microsoft.Web/Sites/', parameters('appName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "phpVersion": "off",
                        "netFrameworkVersion": "v4.5",
                        "use32BitWorkerProcess": "true",
                        "webSocketsEnabled": false,
                        "alwaysOn": "true",
                        "httpLoggingEnabled": true,
                        "logsDirectorySizeLimit": 40
                    }
                }
            ]
        }
       ]
     }
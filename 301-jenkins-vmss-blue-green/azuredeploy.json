{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "defaultValue": "vmssbg",
            "type": "string",
            "metadata": {
                "description": "Prefix for the resource names."
            }
        },
        "imageId": {
            "type": "string",
            "metadata": {
                "description": "The ID of the managed OS image used to provision the Virtual Machines in the VMSS."
            }
        },
        "adminUsername": {
            "defaultValue": "azureuser",
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine hosting the Jenkins and the Virtual Machines in VMSS."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "Configure all linux machines with the SSH public key string, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_A2_v2",
                "Standard_A2",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_D2s_v3",
                "Standard_D2_v3",
                "Standard_DS2_v2",
                "Standard_D2_v2",
                "Standard_DS2",
                "Standard_D2"
            ],
            "metadata": {
                "description": "The virutal machine size to use. We picked out the sizes with 2 vCPUs, but in real world projects you can choose other sizes as you desired."
            }
        },
        "jenkinsDNSPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS name prefix for the public IP used to access the Jenkins service."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS name prefix for the public IP used to access the Tomcat service."
            }
        },
        "servicePrincipalAppId": {
            "type": "string",
            "metadata": {
                "description": "Service Principal App ID (also called Client ID) that has contributor rights to the subscription used for this deployment. It is used to manage related Azure resources, e.g., bake OS image, check resource status, update VMSS image, etc."
            }
        },
        "servicePrincipalAppKey": {
            "type": "securestring",
            "metadata": {
                "description": "Service Principal App Key (also called Client Secret) that has contributor rights to the subscription used for this deployment. It is used to manage related Azure resources, e.g., bake OS image, check resource status, update VMSS image, etc."
            }
        }
    },
    "variables": {
        "service": "tomcat",
        "jenkinsVmName": "[concat(parameters('prefix'), '-jenkins')]",
        "jenkinsNic": "[concat(variables('jenkinsVmName'), 'Nic')]",
        "jenkinsIp": "[concat(variables('jenkinsVmName'), 'IP')]",
        "blueVmss": "[concat(parameters('prefix'), '-blue')]",
        "greenVmss": "[concat(parameters('prefix'), '-green')]",
        "blueComputerNamePrefix": "[variables('blueVmss')]",
        "greenComputerNamePrefix": "[variables('greenVmss')]",
        "ipName": "[concat(parameters('prefix'), '-ip')]",
        "lbName": "[concat(parameters('prefix'), '-lb')]",
        "vnetName": "[concat(parameters('prefix'), '-vnet')]",
        "nsgName": "[concat(parameters('prefix'), '-nsg')]",
        "subnetName": "[concat(parameters('prefix'), '-subnet')]",
        "lbFrontendName": "loadBalancerFrontEnd",
        "lbFrontendId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), variables('lbFrontendName'))]",
        "lbBlueBeName": "blue-bepool",
        "lbBlueNatPoolName": "blue-natpool",
        "lbGreenBeName": "green-bepool",
        "lbGreenNatPoolName": "green-natpool",
        "_artifactsLocation1": "https://raw.githubusercontent.com/Azure/azure-devops-utils/v0.24.0/",
        "_artifactsLocation": "https://raw.githubusercontent.com/ArieShout/azure-devops-utils/blue-green/",
        "_extensionScript": "301-jenkins-vmss-blue-green.sh",
        "_artifactsLocationSasToken": ""
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('jenkinsVmName')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[variables('jenkinsVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('jenkinsVmName'), 'OSDisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNic'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNic'))]"
            ],
            "resources": []
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('jenkinsNic')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jenkinsIp'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('jenkinsIp'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('jenkinsIp')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('jenkinsDNSPrefix')]"
                }
            }
        },
        {
            "comments": "VMSS for the blue environment.",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('virtualMachineSize')]",
                "capacity": 2
            },
            "name": "[variables('blueVmss')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[variables('blueComputerNamePrefix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            }
                        },
                        "imageReference": {
                            "id": "[parameters('imageId')]"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('blueComputerNamePrefix'), 'Nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                                    },
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('blueComputerNamePrefix'), 'IPConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBlueBeName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('lbName'), variables('lbBlueNatPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "overprovision": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
            ]
        },
        {
            "comments": "VMSS for the green environment.",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('virtualMachineSize')]",
                "capacity": 2
            },
            "name": "[variables('greenVmss')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[variables('greenComputerNamePrefix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            }
                        },
                        "imageReference": {
                            "id": "[parameters('imageId')]"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('greenComputerNamePrefix'), 'Nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                                    },
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('greenComputerNamePrefix'), 'IPConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbGreenBeName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('lbName'), variables('lbGreenNatPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "overprovision": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
            ]
        },
        {
            "comments": "Frontend load balancer in Standard SKU which requires API version after 2017-08-01. Initially route to the blue backend.",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontendName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBlueBeName')]"
                    },
                    {
                        "name": "[variables('lbGreenBeName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('lbBlueNatPoolName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "backendPort": 22,
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 50119,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendId')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('lbGreenNatPoolName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "backendPort": 22,
                            "frontendPortRangeStart": 50120,
                            "frontendPortRangeEnd": 50239,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendId')]"
                            }
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[variables('service')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendId')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBlueBeName'))]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), variables('service'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('service')]",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
            ]
        },
        {
            "comments": "Network security groups applied to the network interfaces of the VMs in the VMSS. Needs to open at least 22 and 8080. Tweak this on your demand.",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-public-access",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22-55000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public IP address in Standard SKU. This is required to match the SKU of the load balancer. Requires API version after 2017-08-01.",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('ipName')]",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsPrefix')]"
                }
            }
        },
        {
            "comments": "Virtual network for all the VMs in the VMSS.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "tomcatURL": {
            "type": "string",
            "value": "[concat('http://', reference(variables('ipName')).dnsSettings.fqdn)]"
        }
    }
}
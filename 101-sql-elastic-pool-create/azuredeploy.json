{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server administrator login"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server administrator login password."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server name."
      }
    },
    "elasticPoolName": {
      "type": "string",
      "metadata": {
        "description": "The Elastic Pool name."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "StandardPool",
      "allowedValues": [
        "BasicPool",
        "StandardPool",
        "PremiumPool"
      ],
      "metadata": {
        "description": "The Elastic Pool sku name."
      }
    },
    "poolMinCapacity": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The minimum capacity all databases are guaranteed."
      }
    },
    "poolMaxCapacity": {
      "type": "int",
      "metadata": {
        "description": "The maximum capacity any one database can consume."
      }
    },
    "databasesNames": {
      "type": "array",
      "defaultValue": [
        "db1",
        "db2"
      ],
      "metadata": {
        "description": "The SQL Databases names."
      }
    },
    "databaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "The SQL Database collation."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('serverName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2019-06-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      }

    },
    {
      "name": "[concat(parameters('serverName'), '/', parameters('elasticPoolName'))]",
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "2017-10-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
      ],
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "properties": {
        "perDatabaseSettings": {
          "minCapacity": "[parameters('poolMinCapacity')]",
          "maxCapacity": "[parameters('poolMaxCapacity')]"
        }
      }

    },
    {
      "name": "[concat(parameters('serverName'), '/', parameters('databasesNames')[copyIndex()])]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2019-06-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
        "[concat('Microsoft.Sql/servers/', parameters('serverName') ,'/elasticpools/', parameters('elasticPoolName'))]"
      ],
      "properties": {
        "collation": "[parameters('databaseCollation')]",
        "requestedServiceObjectiveName": "ElasticPool",
        "elasticPoolName": "[parameters('elasticPoolName')]"
      },
      "copy": {
        "name": "addDatabasesInElasticPool",
        "count": "[length(parameters('databasesNames'))]"
      }
    },
    {
      "name": "[concat(parameters('serverName'), '/', 'AllowAllWindowsAzureIps')]",
      "type": "Microsoft.Sql/servers/firewallrules",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
      ],
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      }
    }
  ]
}

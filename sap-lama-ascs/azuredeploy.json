{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sapSystemId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "metadata": {
                "description": "SAP System ID."
            }
        },
        "computerName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "The computer name. This parameter is also used as virtual machine name. It is required if you want to deploy this template using SAP LaMa."
            }
        },
        "osType": {
            "type": "string",
            "allowedValues": [
                "Windows Server 2012 Datacenter",
                "Windows Server 2012 R2 Datacenter",
                "Windows Server 2016 Datacenter",
                "SLES 12",
                "RHEL 7",
                "Oracle Linux 7"
            ],
            "defaultValue": "Windows Server 2012 R2 Datacenter",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
        "sapSystemSize": {
            "type": "string",
            "allowedValues": [
                "Demo",
                "Small < 2.000 SAPS",
                "Medium < 9.000 SAPS",
                "Large < 18.000 SAPS",
                "X-Large < 40.000 SAPS"
            ],
            "defaultValue": "Small < 2.000 SAPS",
            "metadata": {
                "description": "The size of the SAP System you want to deploy."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the virtual machine. You either have to provide this parameter or sshKeyData (Linux only). Mandatory for Windows"
            }
        },
        "sshKeyData": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Public SSH key for the virtual machines. You either have to provide this parameter or adminPassword (Linux only)."
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The id of the subnet you want to use."
            }
        },
        "deployEmptyTarget": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "You can deploy an empty target if you want to use the virtual machine as a target for an instance relocate or similar. In this case, no additional disks or IP configurations are attached."
            }
        },
        "sapcarLocation": {
            "type": "string",
            "metadata": {
                "description": "The location for the sapcar application that matches the operating system you deploy. sapcar is used to extract the archives you provide in other parameters."
            }
        },
        "sapHostAgentArchiveLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of the SAP Host Agent archive. SAP Host Agent is deployed as part of this template depoyment."
            }
        },
        "sapacExtLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of the SAP Adaptive Extensions. SAP Note 2343511 lists the minimum patch level required for Azure."
            }
        },
        "vcRedistLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of the VC Runtime that is required to install the SAP Adaptive Extensions. This parameter is only required for Windows."
            }
        },
        "sapadmPassword": {
            "type": "securestring",
            "minLength": 6,
            "metadata": {
                "description": "Password for the sapadm account."
            }
        },
        "sapadmId": {
            "type": "int",
            "defaultValue": 790,
            "metadata": {
                "description": "The Linux User Id of the sapadm user. Not required for Windows."
            }
        },
        "sapsysGid": {
            "type": "int",
            "defaultValue": 79,
            "metadata": {
                "description": "The Linux group id of the sapsys group. Not required for Windows."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sap-lama-ascs/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "images": {
            "Windows Server 2012 Datacenter": {
                "sku": "2012-Datacenter",
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "OSType": "Windows",
                "osDiskSize": 128
            },
            "Windows Server 2012 R2 Datacenter": {
                "sku": "2012-R2-Datacenter",
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "OSType": "Windows",
                "osDiskSize": 128
            },
            "Windows Server 2016 Datacenter": {
                "sku": "2016-Datacenter",
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "OSType": "Windows",
                "osDiskSize": 128
            },
            "SLES 12": {
                "sku": "12-SP3",
                "offer": "SLES-SAP",
                "publisher": "SUSE",
                "OSType": "Linux",
                "osDiskSize": 128
            },
            "RHEL 7": {
                "sku": "7.3",
                "offer": "RHEL",
                "publisher": "RedHat",
                "OSType": "Linux",
                "osDiskSize": 128
            },
            "Oracle Linux 7": {
                "sku": "7.3",
                "offer": "Oracle-Linux",
                "publisher": "Oracle",
                "OSType": "Linux",
                "osDiskSize": 128
            }
        },
        "internalOSType": "[variables('images')[parameters('osType')].OSType]",
        "osConfigs": {
            "Windows": {
                "Publisher": "Microsoft.Compute",
                "Name": "CustomScriptExtension",
                "Version": "1.7",
                "script": "[concat(parameters('_artifactsLocation'), '/scripts/diskConfig.ps1', parameters('_artifactsLocationSasToken'))]",
                "scriptCall": "powershell.exe -ExecutionPolicy bypass -File diskConfig.ps1",
                "disks": [
                    {
                        "lun": 0,
                        "caching": "ReadOnly",
                        "createOption": "Empty",
                        "diskSizeGB": 128
                    }
                ],
                "scriptArguments": "[concat('-luns \"0\" -names \"sap\" -paths \"C:\\usr\\sap', parameters('sapSystemId'), ',C:\\usr\\sap\\trans\"  -sizes \"50,100\"')]"
            },
            "Linux": {
                "Publisher": "Microsoft.Azure.Extensions",
                "Name": "CustomScript",
                "Version": "2.0",
                "script": "[concat(parameters('_artifactsLocation'), '/scripts/diskConfig.sh', parameters('_artifactsLocationSasToken'))]",
                "scriptCall": "sh diskConfig.sh",
                "disks": [
                    {
                        "lun": 0,
                        "caching": "ReadOnly",
                        "createOption": "Empty",
                        "diskSizeGB": 128
                    }
                ],
                "scriptArguments": "[concat('-luns ''0'' -names ''sap'' -paths ''/sapmnt/', parameters('sapSystemId') , ',/usr/sap/', parameters('sapSystemId') , ',/usr/sap/trans,/home/', variables('sidlower') , 'adm'' -sizes ''20,30,70,100''')]"
            }
        },
        "cseExtPublisher": "[variables('osConfigs')[variables('internalOSType')].Publisher]",
        "cseExtName": "[variables('osConfigs')[variables('internalOSType')].Name]",
        "cseExtVersion": "[variables('osConfigs')[variables('internalOSType')].Version]",
        "csExtensionScript": "[variables('osConfigs')[variables('internalOSType')].script]",
        "csExtensionscriptCall": "[variables('osConfigs')[variables('internalOSType')].scriptCall]",
        "sizes": {
            "Demo": {
                "Linux": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                },
                "Windows": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                }
            },
            "Small < 2.000 SAPS": {
                "Linux": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                },
                "Windows": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                }
            },
            "Medium < 9.000 SAPS": {
                "Linux": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                },
                "Windows": {
                    "vmSize": "Standard_E2s_v3",
                    "useFastNetwork": false
                }
            },
            "Large < 18.000 SAPS": {
                "Linux": {
                    "vmSize": "Standard_E4s_v3",
                    "useFastNetwork": true
                },
                "Windows": {
                    "vmSize": "Standard_E4s_v3",
                    "useFastNetwork": true
                }
            },
            "X-Large < 40.000 SAPS": {
                "Linux": {
                    "vmSize": "Standard_E4s_v3",
                    "useFastNetwork": true
                },
                "Windows": {
                    "vmSize": "Standard_E4s_v3",
                    "useFastNetwork": true
                }
            }
        },
        "vmName": "[parameters('computerName')]",
        "nicName": "[concat(variables('vmName'), '-nic')]",
        "sidlower": "[toLower(parameters('sapSystemId'))]",
        "vnetName": "[concat(variables('sidlower'), '-vnet')]",
        "nsgName": "[concat(variables('sidlower'), '-nsg')]",
        "subnetName": "Subnet",
        "subnets": {
            "true": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
            "false": "[parameters('subnetId')]"
        },
        "selectedSubnetId": "[variables('subnets')[string(equals(length(parameters('subnetId')), 0))]]",
        "basicIPConfig": [
            {
                "name": "ipconfig-vm",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[variables('selectedSubnetId')]"
                    },
                    "primary": true
                }
            }
        ],
        "databaseIPConfig": {
            "Linux": [
                {
                    "name": "ipconfig-ascs",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[variables('selectedSubnetId')]"
                        },
                        "primary": false
                    }
                }
            ],
            "Windows": [
                {
                    "name": "ipconfig-ascs",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[variables('selectedSubnetId')]"
                        },
                        "primary": false
                    }
                }
            ]
        },
        "selectedIPConfig": "[concat(variables('basicIPConfig'), if(parameters('deployEmptyTarget'), json('[]'), variables('databaseIPConfig')[variables('internalOSType')]))]",
        "osSecurityRules": {
            "Windows": [
                {
                    "name": "RDP",
                    "properties": {
                        "description": "Allow RDP Subnet",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ],
            "Linux": [
                {
                    "name": "SSH",
                    "properties": {
                        "description": "Allow SSH Subnet",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        },
        "selectedSecurityRules": "[variables('osSecurityRules')[variables('internalOSType')]]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgName'))]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "condition": "[equals(length(parameters('subnetId')), 0)]",
            "properties": {
                "securityRules": "[variables('selectedSecurityRules')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "condition": "[equals(length(parameters('subnetId')), 0)]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": "[variables('selectedIPConfig')]"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[concat(deployment().name, '-os')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/osprofile.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "osType": {
                        "value": "[variables('internalOSType')]"
                    },
                    "computerName": {
                        "value": "[variables('vmName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "sshKeyData": {
                        "value": "[parameters('sshKeyData')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Resources/deployments/', deployment().name, '-os')]"
            ],
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('sizes')[parameters('sapSystemSize')][variables('internalOSType')].vmSize]"
                },
                "osProfile": "[reference(concat(deployment().name, '-os')).outputs.profile.value]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('images')[parameters('osType')].publisher]",
                        "offer": "[variables('images')[parameters('osType')].offer]",
                        "sku": "[variables('images')[parameters('osType')].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName'), '-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "diskSizeGB": "[variables('images')[parameters('osType')].osDiskSize]",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": "[if(parameters('deployEmptyTarget'), json('[]'), variables('osConfigs')[variables('internalOSType')].disks)]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), '/', variables('cseExtName'))]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "condition": "[not(parameters('deployEmptyTarget'))]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "[variables('cseExtPublisher')]",
                "type": "[variables('cseExtName')]",
                "typeHandlerVersion": "[variables('cseExtVersion')]",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('csExtensionScript')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('csExtensionscriptCall'), ' ', variables('osConfigs')[variables('internalOSType')].scriptArguments)]"
                }
            }
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[concat(deployment().name, '-installsaphostagent')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', variables('cseExtName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/installHostAgent.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmName')]"
                    },
                    "cseExtName": {
                        "value": "[variables('cseExtName')]"
                    },
                    "cseExtPublisher": {
                        "value": "[variables('cseExtPublisher')]"
                    },
                    "cseExtVersion": {
                        "value": "[variables('cseExtVersion')]"
                    },
                    "sapcarLocation": {
                        "value": "[parameters('sapcarLocation')]"
                    },
                    "sapHostAgentArchiveLocation": {
                        "value": "[parameters('sapHostAgentArchiveLocation')]"
                    },
                    "sapacExtLocation": {
                        "value": "[parameters('sapacExtLocation')]"
                    },
                    "vcRedistLocation": {
                        "value": "[parameters('vcRedistLocation')]"
                    },
                    "sapadmPassword": {
                        "value": "[parameters('sapadmPassword')]"
                    },
                    "sapadmId": {
                        "value": "[parameters('sapadmId')]"
                    },
                    "sapsysGid": {
                        "value": "[parameters('sapsysGid')]"
                    },
                    "osType": {
                        "value": "[variables('internalOSType')]"
                    }
                }
            }
        }
    ]
}
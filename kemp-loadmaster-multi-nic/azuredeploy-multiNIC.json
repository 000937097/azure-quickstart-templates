{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VM"
            }
        },
        "balPassword": {
         "type": "securestring",
          "metadata": {
          "description": "Password for bal account"
        }
       },
        "vmSize": {
            "type": "string",
	    "allowedValues": [
				"Standard_A3",
				"Standard_A6",
				"Standard_A8",
				"Standard_A10",
				"Standard_D2",
				"Standard_DS11",
				"Standard_F2",
				"Standard_G2",
				"Standard_H8"
				],
	     "defaultValue": "Standard_A3",
            "metadata": {
                "description": "Size of the VM"
            }
         },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET1"
            }
	 },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "existingsubnetName1": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet in the virtual network you want to use"
            }
         },
        "existingsubnetName2": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet in the virtual network you want to use"
            }
        },
       "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        }
    },
    "variables": {
        "api-version": "2015-06-15",
        "publicIPAddressType": "Dynamic",
        "adminUsername": "bal",
        "vnetID1": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
        "subnetRef1": "[concat(variables('vnetID1'),'/subnets/', parameters('existingsubnetName1'))]",
        "subnetRef2": "[concat(variables('vnetID1'),'/subnets/', parameters('existingsubnetName2'))]",
        "nicName1": "NIC1",
	"nicName2": "NIC2",
        "storageAccountType": "Standard_LRS",
        "imageOffer": "vlm-azure",
        "imagePublisher": "kemptech",
        "imageVersion": "latest",
        "imageSKU": "basic-byol",
        "storageAccountName": "[concat('vhds', uniqueString(resourceGroup().id))]",
        "publicIPAddressName": "[parameters('vmName')]",
        "imageReference": {
  	  "publisher": "[variables('imagePublisher')]",
  	  "offer": "[variables('imageOffer')]",
  	  "sku": "[variables('imageSku')]",
  	  "version": "[variables('imageVersion')]"
     },
    "imagePlan": {
 	"name": "[variables('imageSku')]",
  	"product": "[variables('imageOffer')]",
  	"publisher": "[variables('imagePublisher')]"
     }
   },
   "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
      {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
       {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName1')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "tags": {
                "displayName": "NetworkInterface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef1')]"
                            }
                        }
                    }
                ]
            }
        },
       {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName2')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NetworkInterface2"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                             "subnet": {
                                "id": "[variables('subnetRef2')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "plan": "[variables('imagePlan')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "VirtualMachine"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName1'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
            ],
            "properties": {
               "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
           "osProfile": {
             "computerName": "[parameters('vmName')]",
             "adminUsername": "[variables('adminUsername')]",
            "adminPassword": "[parameters('balPassword')]"
             },
             "storageProfile": {
	      "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('imageSKU')]",
              "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
               "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob, 'vhds/osdisk.vhd')]"
              }, 
            "caching": "ReadWrite",
            "createOption": "FromImage"
                 }
                }, 
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName1'))]",
			 "properties": { "primary": true }
			},
			{
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]",
			"properties": { "primary": false }
                        }
                    ]
                }
            }
        }
    ]
}
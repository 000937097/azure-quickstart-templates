{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "windowsOSVersion":{
         "type":"string",
         "defaultValue":"2016-Datacenter",
         "allowedValues":[
            "2008-R2-SP1",
            "2012-Datacenter",
            "2012-R2-Datacenter",
            "2016-Nano-Server",
            "2016-Datacenter-with-Containers",
            "2016-Datacenter"
         ],
         "metadata":{
            "description":"The Windows version for Windows Jump-host VM."
         }
      },
      "winVmSize":{
         "type":"string",
         "defaultValue":"Standard_D3_v2",
         "allowedValues":[
            "Standard_A1_v2",
            "Standard_A2m_v2",
            "Standard_A2_v2",
            "Standard_A4m_v2",
            "Standard_A4_v2",
            "Standard_A8m_v2",
            "Standard_A8_v2",
            "Standard_B1ms",
            "Standard_B1s",
            "Standard_B2ms",
            "Standard_B2s",
            "Standard_B4ms",
            "Standard_B8ms",
            "Standard_D1_v2",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_D15_v2",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2"
         ],
         "metadata":{
            "description":"Size for Windows jump-host VM"
         }
      },
      "winVmUser":{
         "type":"string",
         "defaultValue":"WinAdmin",
         "metadata":{
            "description":"Username for Windows jump-host VM"
         }
      },
      "winVmPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Password for Windows jump-host VM. The password must be between 6-72 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character 5) Control characters are not allowed"
         }
      },
      "winVmDns":{
         "type":"string",
         "defaultValue":"hubwinjumphostvm",
         "metadata":{
            "description":"DNS Label for Windows jump-host VM."
         }
      },
      "deployVpnGateway":{
         "type":"string",
         "defaultValue":"No",
         "allowedValues":[
            "Yes",
            "No"
         ],
         "metadata":{
            "description":"Whether or not to deploy a VPN Gateway in the Hub"
         }
      },
      "gatewaySku":{
         "type":"string",
         "defaultValue":"Basic",
         "allowedValues":[
            "Basic",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3"
         ],
         "metadata":{
            "description":"The SKU of the Gateway, if deployed"
         }
      }
   },
   "variables":{
      "hubVnetName":"hubVnet",
      "hubVnetPrefix":"192.168.0.0/20",
      "dmzSubnetName":"DMZSubnet",
      "dmzSubnetPrefix":"192.168.0.0/25",
      "mgmtSubnetName":"ManagementSubnet",
      "mgmtSubnetPrefix":"192.168.1.0/24",
      "sharedSubnetName":"SharedSubnet",
      "sharedSubnetPrefix":"192.168.4.0/22",
      "gatewaySubnetName":"GatewaySubnet",
      "gatewaySubnetPrefix":"192.168.15.224/27",
      "gatewayName":"hubVpnGateway",
      "gatewayPIPName":"hubVpnGatewayPublicIp",
      "subnetGatewayId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('gatewaySubnetName'))]",
      "winJmphostName":"winJmphostVm",
      "devSpokeVnetName":"spokeDevVnet",
      "devSpokeVnetPrefix":"10.10.0.0/16",
      "prodSpokeVnetName":"spokeProdVnet",
      "prodSpokeVnetPrefix":"10.100.0.0/16",
      "spokeWorkloadSubnetName":"WorkloadSubnet",
      "devSpokeWorkloadSubnetPrefix":"10.10.0.0/16",
      "prodSpokeWorkloadSubnetPrefix":"10.100.0.0/16",
      "hubID":"[resourceId('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]",
      "devSpokeID":"[resourceId('Microsoft.Network/virtualNetworks/', variables('devSpokeVnetName'))]",
      "prodSpokeID":"[resourceId('Microsoft.Network/virtualNetworks/', variables('prodSpokeVnetName'))]",
      "gatewayID":"[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gatewayName'))]",
      "winVmNicName":"[concat(variables('winJmphostName'), 'NIC')]",
      "winVmStorageName":"[concat('hubwinvm',uniquestring(resourceGroup().id))]",
      "winNsgName":"winJmpHostNsg",
      "winNsgRuleName":"inboundRdpNsgRule",
      "winJmphostPublicIpName":"winJmphostVmPublicIp"
   },
   "resources":[
      {
         "comments":"HUB Virtual Network (VNet)",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('hubVnetName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('hubVnetPrefix')]"
               ]
            },
            "dhcpOptions":{
               "dnsServers":[

               ]
            },
            "virtualNetworkPeerings":[

            ],
            "enableDdosProtection":false,
            "enableVmProtection":false
         },
         "dependsOn":[

         ]
      },
      {
         "comments":"Management Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('hubVnetName'), '/', variables('mgmtSubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('mgmtSubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
         ]
      },
      {
         "comments":"Shared Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('hubVnetName'), '/', variables('sharedSubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('sharedSubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
         ]
      },
      {
         "comments":"DMZ Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('hubVnetName'), '/', variables('dmzSubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('dmzSubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
         ]
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "comments":"Gateway Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('hubVnetName'), '/', variables('gatewaySubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('gatewaySubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
         ]
      },
      {
         "comments":"Development Spoke Virtual Network (VNet)",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('devSpokeVnetName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('devSpokeVnetPrefix')]"
               ]
            },
            "dhcpOptions":{
               "dnsServers":[

               ]
            },
            "subnets":[

            ],
            "virtualNetworkPeerings":[

            ],
            "enableDdosProtection":false,
            "enableVmProtection":false
         },
         "dependsOn":[

         ]
      },
      {
         "comments":"Development Workload Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('devSpokeVnetName'), '/', variables('spokeWorkloadSubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('devSpokeWorkloadSubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('devSpokeVnetName'))]"
         ]
      },
      {
         "comments":"Production Spoke Virtual Network (VNet)",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('prodSpokeVnetName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('prodSpokeVnetPrefix')]"
               ]
            },
            "dhcpOptions":{
               "dnsServers":[

               ]
            },
            "subnets":[

            ],
            "virtualNetworkPeerings":[

            ],
            "enableDdosProtection":false,
            "enableVmProtection":false
         },
         "dependsOn":[

         ]
      },
      {
         "comments":"Production Workload Subnet",
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('prodSpokeVnetName'), '/', variables('spokeWorkloadSubnetName'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"[variables('prodSpokeWorkloadSubnetPrefix')]",
            "serviceEndpoints":[

            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('prodSpokeVnetName'))]"
         ]
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('hubVnetName'), '/gwPeering_', variables('hubVnetName'), '_', variables('devSpokeVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('devSpokeID')]",
            "[variables('hubID')]",
            "[variables('gatewayID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":true,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('devSpokeID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'No')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('hubVnetName'), '/peering_', variables('hubVnetName'), '_', variables('devSpokeVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('devSpokeID')]",
            "[variables('hubID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('devSpokeID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('hubVnetName'), '/gwPeering_', variables('hubVnetName'), '_', variables('prodSpokeVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('prodSpokeID')]",
            "[variables('hubID')]",
            "[variables('gatewayID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":true,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('prodSpokeID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'No')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('hubVnetName'), '/peering_', variables('hubVnetName'), '_', variables('prodSpokeVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('prodSpokeID')]",
            "[variables('hubID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('prodSpokeID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('devSpokeVnetName'), '/gwPeering_', variables('devSpokeVnetName'), '_', variables('hubVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('devSpokeID')]",
            "[variables('hubID')]",
            "[variables('gatewayID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":true,
            "remoteVirtualNetwork":{
               "id":"[variables('hubID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'No')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('devSpokeVnetName'), '/peering_', variables('devSpokeVnetName'), '_', variables('hubVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('devSpokeID')]",
            "[variables('hubID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('hubID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('prodSpokeVnetName'), '/gwPeering_', variables('prodSpokeVnetName'), '_', variables('hubVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('prodSpokeID')]",
            "[variables('hubID')]",
            "[variables('gatewayID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":true,
            "remoteVirtualNetwork":{
               "id":"[variables('hubID')]"
            }
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'No')]",
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
         "name":"[concat(variables('prodSpokeVnetName'), '/peering_', variables('prodSpokeVnetName'), '_', variables('hubVnetName'))]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[variables('prodSpokeID')]",
            "[variables('hubID')]"
         ],
         "properties":{
            "allowVirtualNetworkAccess":true,
            "allowForwardedTraffic":true,
            "allowGatewayTransit":false,
            "useRemoteGateways":false,
            "remoteVirtualNetwork":{
               "id":"[variables('hubID')]"
            }
         }
      },
      {
         "comments":"Windows Jump-Hosts",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[variables('winJmphostName')]",
         "apiVersion":"2017-12-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('winVmSize')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"MicrosoftWindowsServer",
                  "offer":"WindowsServer",
                  "sku":"[parameters('windowsOSVersion')]",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage"
               },
               "dataDisks":[
                  {
                     "diskSizeGB":20,
                     "lun":0,
                     "createOption":"Empty"
                  }
               ]
            },
            "osProfile":{
               "computerName":"[variables('winJmphostName')]",
               "adminUsername":"[parameters('winVmUser')]",
               "adminPassword":"[parameters('winVmPassword')]",
               "windowsConfiguration":{
                  "provisionVMAgent":true
               },
               "secrets":[

               ]
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('winVmNicName'))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":true,
                  "storageUri":"[concat('https', '://', variables('winVmStorageName'), '.blob.core.windows.net', '/')]"
               }
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkInterfaces', variables('winVmNicName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('winVmStorageName'))]"
         ]
      },
      {
         "comments":"Network Interface Card (NIC) for Win Jump-Hosts",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('winVmNicName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "ipConfigurations":[
               {
                  "name":"winJmpHostIpConfig",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('winJmphostPublicIpName'))]"
                     },
                     "subnet":{
                        "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('mgmtSubnetName'))]"
                     },
                     "primary":true,
                     "privateIPAddressVersion":"IPv4"
                  }
               }
            ],
            "dnsSettings":{
               "dnsServers":[

               ],
               "appliedDnsServers":[

               ]
            },
            "enableAcceleratedNetworking":false,
            "enableIPForwarding":false,
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('winNsgName'))]"
            },
            "primary":true
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('winJmphostPublicIpName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('winNsgName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('mgmtSubnetName'))]"
         ]
      },
      {
         "comments":"NSG For Windows Jump Hosts",
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"[variables('winNsgName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "securityRules":[
               {
                  "name":"NSG_RULE_INBOUND_RDP",
                  "properties":{
                     "description":"Allow inbound RDP",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"3389",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1000,
                     "direction":"Inbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               }
            ],
            "defaultSecurityRules":[
               {
                  "name":"AllowVnetInBound",
                  "properties":{
                     "description":"Allow inbound traffic from all VMs in VNET",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"VirtualNetwork",
                     "destinationAddressPrefix":"VirtualNetwork",
                     "access":"Allow",
                     "priority":65000,
                     "direction":"Inbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               },
               {
                  "name":"AllowAzureLoadBalancerInBound",
                  "properties":{
                     "description":"Allow inbound traffic from azure load balancer",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"AzureLoadBalancer",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":65001,
                     "direction":"Inbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               },
               {
                  "name":"DenyAllInBound",
                  "properties":{
                     "description":"Deny all inbound traffic",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Deny",
                     "priority":65500,
                     "direction":"Inbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               },
               {
                  "name":"AllowVnetOutBound",
                  "properties":{
                     "description":"Allow outbound traffic from all VMs to all VMs in VNET",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"VirtualNetwork",
                     "destinationAddressPrefix":"VirtualNetwork",
                     "access":"Allow",
                     "priority":65000,
                     "direction":"Outbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               },
               {
                  "name":"AllowInternetOutBound",
                  "properties":{
                     "description":"Allow outbound traffic from all VMs to Internet",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"Internet",
                     "access":"Allow",
                     "priority":65001,
                     "direction":"Outbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               },
               {
                  "name":"DenyAllOutBound",
                  "properties":{
                     "description":"Deny all outbound traffic",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Deny",
                     "priority":65500,
                     "direction":"Outbound",
                     "sourcePortRanges":[

                     ],
                     "destinationPortRanges":[

                     ],
                     "sourceAddressPrefixes":[

                     ],
                     "destinationAddressPrefixes":[

                     ]
                  }
               }
            ]
         },
         "dependsOn":[

         ]
      },
      {
         "comments":"Public IP (PIP) for Windows JumpHost",
         "type":"Microsoft.Network/publicIPAddresses",
         "sku":{
            "name":"Basic",
            "tier":"Regional"
         },
         "name":"[variables('winJmphostPublicIpName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "scale":null,
         "properties":{
            "publicIPAddressVersion":"IPv4",
            "publicIPAllocationMethod":"Static",
            "idleTimeoutInMinutes":4,
            "dnsSettings":{
               "domainNameLabel":"[toLower(parameters('winVmDns'))]",
               "fqdn":"[concat(toLower(variables('winJmphostName')), '.[resourceGroup().location].cloudapp.azure.com')]"
            },
            "ipTags":[

            ]
         },
         "dependsOn":[

         ]
      },
      {
         "comments":"Storage account for WIN VM",
         "type":"Microsoft.Storage/storageAccounts",
         "sku":{
            "name":"Standard_GRS",
            "tier":"Standard"
         },
         "kind":"Storage",
         "name":"[variables('winVmStorageName')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "tags":{

         },
         "scale":null,
         "properties":{
            "networkAcls":{
               "bypass":"AzureServices",
               "virtualNetworkRules":[

               ],
               "ipRules":[

               ],
               "defaultAction":"Allow"
            },
            "supportsHttpsTrafficOnly":false,
            "encryption":{
               "services":{
                  "file":{
                     "enabled":true
                  },
                  "blob":{
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            }
         },
         "dependsOn":[

         ]
      },
      {
         "apiVersion":"2018-02-01",
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('gatewayPIPName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "publicIPAllocationMethod":"Dynamic"
         }
      },
      {
         "condition":"[equals(parameters('deployVpnGateway'), 'Yes')]",
         "apiVersion":"2017-10-01",
         "type":"Microsoft.Network/virtualNetworkGateways",
         "name":"[variables('gatewayName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayPIPName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('gatewaySubnetName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "subnet":{
                        "id":"[variables('subnetGatewayId')]"
                     },
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayPIPName'))]"
                     }
                  },
                  "name":"vnetGatewayConfig"
               }
            ],
          "sku": {
            "name": "[parameters('gatewaySku')]",
            "tier": "[parameters('gatewaySku')]"
          },
            "gatewayType":"Vpn",
            "vpnType":"RouteBased",
            "enableBgp":"false"
         }
      }
   ],
   "outputs":{
      "Jumphost VM IP address":{
         "type":"string",
         "value":"[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('winJmphostPublicIpName'))).IpAddress]"
      }
   }
}
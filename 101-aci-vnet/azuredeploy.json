{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters":
	{
    "vnetName":
		{
			"type": "string",
			"defaultValue": "aci-vnet",
			"metadata":
			{
				"description": "VNet name"
			}
		},
		"vnetAddressPrefix":
		{
			"type": "string",
			"defaultValue": "10.0.0.0/16",
			"metadata":
			{
				"description": "Address prefix"
			}
		},
		"subnetAddressPrefix":
		{
			"type": "string",
			"defaultValue": "10.0.0.0/24",
			"metadata":
			{
				"description": "Subnet prefix"
			}
		},
		"subnetName":
		{
			"type": "string",
			"defaultValue": "aci-subnet",
			"metadata":
			{
				"description": "Subnet name"
			}
		},
    "networkProfileName":
		{
			"type": "string",
			"defaultValue": "aci-networkProfile",
			"metadata":
			{
				"description": "Network profile name"
			}
		},
		"location":
		{
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata":
			{
				"description": "Location for all resources."
			}
		},		
		"interfaceConfigName":
		{
			"type": "string",
      "defaultValue": "eth0",
			"metadata":
			{
				"description": "Container network interface configuration name"
			}
		},
		"interfaceIpConfig":
		{
			"type": "string",
      "defaultValue": "ipconfigprofile1",
			"metadata":
			{
				"description": "IP configuration name"
			}
		},		
		"containerGroupName":
		{
			"type": "string",
      "defaultValue": "aci-containergroup",
			"metadata":
			{
				"description": "Container group name"
			}
		},
    "containerName":
		{
			"type": "string",
      "defaultValue": "aci-container",
			"metadata":
			{
				"description": "Container name"
			}
		},
		"image": {
      "type": "string",
      "metadata": {
        "description": "Container image to deploy. Should be of the form accountName/imagename:tag for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
      },
      "defaultValue": "microsoft/aci-helloworld"
    },
    "port": {
      "type": "string",
      "metadata": {
        "description": "Port to open on the container."
      },
      "defaultValue": "80"
    },
    "cpuCores": {
      "type": "string",
      "metadata": {
        "description": "The number of CPU cores to allocate to the container. Must be an integer."
      },
      "defaultValue": "1.0"
    },
    "memoryInGb": {
      "type": "string",
      "metadata": {
        "description": "The amount of memory to allocate to the container in gigabytes."
      },
      "defaultValue": "1.5"
    }
	},
  "variables": {},
	"resources": [
		{
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[parameters('vnetName')]",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",
			"properties":
			{
				"addressSpace":
				{
					"addressPrefixes": [
						"[parameters('vnetAddressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[parameters('subnetName')]",
						"properties":
						{
							"addressPrefix": "[parameters('subnetAddressPrefix')]",
							"serviceEndpoints": [
								{
									"service": "Microsoft.Storage",
									"locations": [
										"[parameters('location')]"
									]
								}
							],
							"delegations": [
								{
									"name": "DelegationService",
									"properties":
									{
										"serviceName": "Microsoft.ContainerInstance/containerGroups"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[parameters('networkProfileName')]",
			"type": "Microsoft.Network/networkProfiles",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",
			"properties":
			{
				"containerNetworkInterfaceConfigurations": [
					{
						"name": "[parameters('interfaceConfigName')]",
						"properties":
						{
							"ipConfigurations": [
								{
									"name": "[parameters('interfaceIpConfig')]",
									"properties":
									{
										"subnet":
										{
											"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
										}
									}
								}
							]
						}
					}
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
			]
		},
		{
			"name": "[parameters('containergroupname')]",
			"type": "Microsoft.ContainerInstance/containerGroups",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",		
			"properties":
			{
				"containers": [
					{
						"name": "[parameters('containername')]",
						"properties":
						{
							"image": "[parameters('image')]",
							"ports": [
								{
									"port": "[parameters('port')]",
                  "protocol": "TCP"
								}
							],
							"resources":
							{
								"requests":
								{
									"cpu": "[parameters('cpuCores')]",
									"memoryInGB": "[parameters('memoryInGb')]"
								}
							}
						}
					}
				],
				"osType": "Linux",
				"networkProfile":
				{
					"Id": "[resourceId('Microsoft.Network/networkProfiles', parameters('networkProfileName'))]"
				},
        "restartPolicy": "Always"
			},
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkProfiles', parameters('networkProfileName'))]"
      ]
		}
	]
}
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region where resources are deployed"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "logicAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of Logic App"
      }
    },
    "eventGridTopicName": {
      "type": "string",
      "metadata": {
        "description": "Name of Event Grid Topic"
      }
    },
    "eventGridTopicSchema": {
      "type": "string",
      "metadata": {
        "description": "Event Grid Topic schema"
      },
      "allowedValues": [
        "EventGridSchema",
        "CloudEventV01Schema"
      ],
      "defaultValue": "CloudEventV01Schema"
    },
    "eventGridSubscriptionName": {
      "type": "string",
      "metadata": {
        "description": "Name of Event Grid Subscription"
      }
    },
    "eventGridSubscriptionDeliverySchema": {
      "type": "string",
      "metadata": {
        "description": "Event Grid Subscription delivery schema"
      },
      "allowedValues": [
        "EventGridSchema",
        "CloudEventV01Schema"
      ],
      "defaultValue": "CloudEventV01Schema"
    },
    "eventGridSubscriptionEndpointType": {
      "type": "string",
      "metadata": {
        "description": "Event Grid Subscription endpoint type"
      },
      "allowedValues": [
        "Webhook"
      ],
      "defaultValue": "Webhook"
    },
    "eventGridSubscriptionIncludedEventTypes": {
      "type": "string",
      "metadata": {
        "description": "Comma delimited list of filters for Event Grid Subscription"
      },
      "defaultValue": "All"
    },
    "eventGridSubscriptionIsSubjectCaseSensitive": {
      "type": "bool",
      "metadata": {
        "description": "Value indicating whether the filter subjectBeginsWith and subjectEndsWith are case sensitive or not"
      },
      "defaultValue": false
    }
  },
  "variables": {
    "logicApp": {
      "name": "[parameters('logicAppName')]",
      "apiVersion": "2017-07-01",
      "resourceId": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]",
      "location": "[parameters('location')]",
      "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual')]"
    },
    "eventGridTopic": {
      "name": "[parameters('eventGridTopicName')]",
      "apiVersion": "2018-05-01-preview",
      "resourceId": "[resourceId('Microsoft.EventGrid/topics', parameters('eventGridTopicName'))]",
      "location": "[parameters('location')]",
      "schema": "[parameters('eventGridTopicSchema')]"
    },
    "eventGridSubscription": {
      "name": "[parameters('eventGridSubscriptionName')]",
      "apiVersion": "2018-05-01-preview",
      "location": "[parameters('location')]",
      "deliverySchema": "[parameters('eventGridSubscriptionDeliverySchema')]",
      "endpoint": {
        "type": "[parameters('eventGridSubscriptionEndpointType')]"
      },
      "filter": {
        "includedEventTypes": "[split(parameters('eventGridSubscriptionIncludedEventTypes'), ',')]",
        "isSubjectCaseSensitive": "[parameters('eventGridSubscriptionIsSubjectCaseSensitive')]"
      }
    },
    "tags": {
      "author": "Justin Yoo",
      "profile": "https://twitter.com/justinchronicle",
      "projectUrl": "https://github.com/Azure/azure-quickstart-templates",
      "repositoryUrl": "https://github.com/Azure/azure-quickstart-templates",
      "license": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/LICENSE"
    }
  },
  "resources": [
    {
      "comments": "### RESOURCE - LOGIC APP - EVENT HANDLER ###",
      "apiVersion": "[variables('logicApp').apiVersion]",
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('logicApp').name]",
      "location": "[variables('logicApp').location]",
      "tags": "[variables('tags')]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "method": "POST",
                "schema": {}
              }
            }
          },
          "actions": {},
          "outputs": {}
        }
      }
    },
    {
      "comments": "### RESOURCE - CUSTOM EVENT GRID TOPIC ###",
      "apiVersion": "[variables('eventGridTopic').apiVersion]",
      "type": "Microsoft.EventGrid/topics",
      "name": "[variables('eventGridTopic').name]",
      "location": "[variables('eventGridTopic').location]",
      "tags": "[variables('tags')]",
      "properties": {
        "inputSchema": "[variables('eventGridTopic').schema]"
      }
    },
    {
      "comments": "### RESOURCE - EVENT GRID SUBSCRIPTION ###",
      "apiVersion": "[variables('eventGridSubscription').apiVersion]",
      "type": "Microsoft.EventGrid/topics/providers/eventSubscriptions",
      "name": "[concat(variables('eventGridTopic').name, '/Microsoft.EventGrid/', variables('eventGridSubscription').name)]",
      "location": "[variables('eventGridSubscription').location]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[variables('logicApp').name]",
        "[variables('eventGridTopic').name]"
      ],
      "properties": {
        "eventDeliverySchema": "[variables('eventGridSubscription').deliverySchema]",
        "destination": {
          "endpointType": "[variables('eventGridSubscription').endpoint.type]",
          "properties": {
            "endpointUrl": "[listCallbackUrl(variables('logicApp').triggerId, variables('logicApp').apiVersion).value]"
          }
        },
        "filter": {
          "includedEventTypes": "[variables('eventGridSubscription').filter.includedEventTypes]",
          "isSubjectCaseSensitive": "[variables('eventGridSubscription').filter.isSubjectCaseSensitive]"
        }
      }
    }
  ],
  "outputs": {
    "eventGridTopicEndpointUrl": {
      "type": "string",
      "value": "[reference(variables('eventGridTopic').name).endpoint]"
    },
    "eventGridTopicSasKey": {
      "type": "string",
      "value": "[listKeys(variables('eventGridTopic').resourceId, variables('eventGridTopic').apiVersion).key1]"
    }
  }
}
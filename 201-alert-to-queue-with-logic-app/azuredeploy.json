{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "EndpointName": {
            "type": "string",
            "metadata": {
                "description": "Give a unique name that will be used to create the web endpoint for your Logic app. As this is used in a DNS name it must be globally unique."
            }
        },
        "QueueName": {
            "type": "string",
            "metadata": {
                "description": "The name of the queue you would like to drop the messages dropped into. The queue must already exist before you run the Logic app."
            }
        },
        "StorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account that contains the queue."
            }
        },
        "StorageAccountKey": {
            "type": "securestring",
            "metadata": {
                "description": "The primary or secondary shared access key of the storage account that contains the queue."
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[parameters('EndpointName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": "Free",
                "workerSize": "0"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-04-01",
            "name": "[concat(parameters('EndpointName'),'gateway')]",
            "location": "[resourceGroup().location]",
            "kind": "gateway",
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/gateway",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'), 'gateway'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.AppService/gateways', concat(parameters('EndpointName'), 'gateway'))]"
                    }
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('EndpointName'))]"
            ],
            "properties": {
                "gatewaySiteName": "[concat(parameters('EndpointName'),'gateway')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('EndpointName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "ApiAppsGateway_EXTENSION_VERSION",
                            "value": "latest"
                        },
                        {
                            "name": "EmaStorage",
                            "value": "D:\\home\\data\\apiapps"
                        },
                        {
                            "name": "WEBSITE_START_SCM_ON_SITE_CREATION",
                            "value": "1"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.AppService/gateways",
            "apiVersion": "2015-03-01-preview",
            "name": "[concat(parameters('EndpointName'),'gateway')]",
            "location": "[resourceGroup().location]",
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/gatewaySite",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/gateways', concat(parameters('EndpointName'),'gateway'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'gateway'))]"
                    }
                },
                {
                    "type": "tokens",
                    "apiVersion": "2015-03-01-preview",
                    "location": "[resourceGroup().location]",
                    "name": "AlertLogicApp",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/gateways', concat(parameters('EndpointName'),'gateway'))]"
                    ]
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'gateway'))]"
            ],
            "properties": {
                "host": {
                    "resourceName": "[concat(parameters('EndpointName'),'gateway')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-04-01",
            "name": "[concat(parameters('EndpointName'),'httplistener')]",
            "location": "[resourceGroup().location]",
            "kind": "apiApp",
            "tags": {
                "packageId": "HTTPListener"
            },
            "resources": [
                {
                    "type": "siteextensions",
                    "apiVersion": "2015-02-01",
                    "name": "HTTPListener",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'httplistener'))]"
                    ],
                    "properties": {
                        "type": "WebRoot",
                        "feed_url": "http://apiapps-preview.nuget.org/api/v2/",
                        "version": "0.0.651"
                    }
                },
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/apiApp",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'httplistener'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.AppService/apiapps', concat(parameters('EndpointName'),'httplistener'))]"
                    }
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('EndpointName'))]",
                "[resourceId('Microsoft.AppService/gateways', concat(parameters('EndpointName'),'gateway'))]"
            ],
            "properties": {
                "gatewaySiteName": "[concat(parameters('EndpointName'),'gateway')]",
                "serverFarmId": "[parameters('EndpointName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "EMA_MicroserviceId",
                            "value": "[concat(parameters('EndpointName'),'httplistener')]"
                        },
                        {
                            "name": "EMA_Secret",
                            "value": "e90a052c266ecbcff6870c8c89780ee02d628c923dc1e2bbb91103062fa976ae"
                        },
                        {
                            "name": "EMA_RuntimeUrl",
                            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'gateway'))).hostNames[0])]"
                        },
                        {
                            "name": "WEBSITE_START_SCM_ON_SITE_CREATION",
                            "value": "1"
                        },
                        {
                            "name": "AutoResponse",
                            "value": "true"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.AppService/apiapps",
            "apiVersion": "2015-03-01-preview",
            "name": "[concat(parameters('EndpointName'),'httplistener')]",
            "location": "[resourceGroup().location]",
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/apiAppSite",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/apiapps', concat(parameters('EndpointName'),'httplistener'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'httplistener'))]"
                    }
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/siteextensions', concat(parameters('EndpointName'),'httplistener'), 'HTTPListener')]"
            ],
            "properties": {
                "package": {
                    "id": "HTTPListener"
                },
                "accessLevel": "PublicAnonymous",
                "host": {
                    "resourceName": "[concat(parameters('EndpointName'),'httplistener')]"
                },
                "gateway": {
                    "resourceName": "[concat(parameters('EndpointName'),'gateway')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-04-01",
            "name": "[concat(parameters('EndpointName'),'queue')]",
            "location": "[resourceGroup().location]",
            "kind": "apiApp",
            "dependsOn": [
                "[resourceId('Microsoft.AppService/gateways', concat(parameters('EndpointName'),'gateway'))]"
            ],
            "resources": [
                {
                    "type": "siteextensions",
                    "tags": {
                        "displayName": "APIAppExtension"
                    },
                    "apiVersion": "2015-04-01",
                    "name": "Microsoft.ApiApp",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'queue'))]"
                    ],
                    "properties": {
                        "type": "WebRoot",
                        "feed_url": "http://apiapps-preview.nuget.org/api/v2/"
                    }
                },
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/apiApp",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites',  concat(parameters('EndpointName'),'queue'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.AppService/apiapps',concat(parameters('EndpointName'),'queue'))]"
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', concat(parameters('EndpointName'),'queue'))]"
                    ],
                    "properties": {
                        "RepoUrl": "https://github.com/logicappsio/AzureQueueSample",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "gatewaySiteName": "[concat(parameters('EndpointName'),'gateway')]",
                "serverFarmId": "[parameters('EndpointName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "EMA_MicroserviceId",
                            "value": "[concat(parameters('EndpointName'),'queue')]"
                        },
                        {
                            "name": "EMA_Secret",
                            "value": "e90a052c266ecbcff6870c8c89780ee02d628c923dc1e2bbb91103062fa976ae"
                        },
                        {
                            "name": "EMA_RuntimeUrl",
                            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'gateway'))).hostNames[0])]"
                        },
                        {
                            "name": "WEBSITE_START_SCM_ON_SITE_CREATION",
                            "value": "1"
                        },
                        {
                            "name": "StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',parameters('StorageAccountKey') ,';')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.AppService/apiapps",
            "apiVersion": "2015-03-01-preview",
            "name": "[concat(parameters('EndpointName'),'queue')]",
            "location": "[resourceGroup().location]",
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/apiAppSite",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/apiapps', concat(parameters('EndpointName'),'queue'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'),'queue'))]"
                    }
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/siteextensions', concat(parameters('EndpointName'),'queue'), 'Microsoft.ApiApp')]"
            ],
            "properties": {
                "package": {
                    "id": "Microsoft.ApiApp"
                },
                "accessLevel": "PublicAnonymous",
                "host": {
                    "resourceName": "[concat(parameters('EndpointName'),'queue')]"
                },
                "gateway": {
                    "resourceName": "[concat(parameters('EndpointName'),'gateway')]"
                },
                "dependencies": []
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2015-02-01-preview",
            "name": "[parameters('EndpointName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.AppService/apiApps', concat(parameters('EndpointName'),'httplistener'))]",
                "[resourceId('Microsoft.AppService/apiApps', concat(parameters('EndpointName'),'queue'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard",
                    "plan": {
                        "id": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/',parameters('EndpointName'))]"
                    }
                },
                "definition": {
                    "$schema": "http://schema.management.azure.com/providers/Microsoft.Logic/schemas/2014-12-01-preview/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "token": {
                            "defaultValue": "[reference(resourceId('Microsoft.AppService/gateways/tokens', concat(parameters('EndpointName'), 'gateway'), 'AlertLogicApp')).token]",
                            "type": "String",
                            "metadata": {
                                "token": {
                                    "name": "token"
                                }
                            }
                        }
                    },
                    "triggers": {
                        "httplistener": {
                            "type": "ApiApp",
                            "inputs": {
                                "apiVersion": "2015-01-14",
                                "host": {
                                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.AppService/apiApps/',concat(parameters('EndpointName'),'httplistener'))]",
                                    "gateway": "[concat('https://', reference(resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'), 'gateway'))).hostNames[0])]"
                                },
                                "operation": "Trigger",
                                "parameters": {
                                    "triggerId": "@workflow().name",
                                    "parameters": {
                                        "callbackUrl": "@accessKeys('default').primary.secretRunUri",
                                        "inputs": {
                                            "HttpMethod": "Post"
                                        }
                                    }
                                },
                                "authentication": {
                                    "type": "Raw",
                                    "scheme": "Zumo",
                                    "parameter": "@parameters('token')"
                                }
                            },
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "conditions": [
                                {
                                    "expression": "@bool('false')"
                                }
                            ]
                        }
                    },
                    "actions": {
                        "queueconnector": {
                            "type": "ApiApp",
                            "inputs": {
                                "apiVersion": "2015-01-14",
                                "host": {
                                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.AppService/apiApps/',concat(parameters('EndpointName'),'queue'))]",
                                    "gateway": "[concat('https://', reference(resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'), 'gateway'))).hostNames[0])]"
                                },
                                "operation": "Messages_SendMessage",
                                "parameters": {
                                    "queueName": "[parameters('QueueName')]",
                                    "messageText": "@{triggers().outputs.body.Content}"
                                },
                                "authentication": {
                                    "type": "Raw",
                                    "scheme": "Zumo",
                                    "parameter": "@parameters('token')"
                                }
                            },
                            "conditions": [
                                {
                                    "expression": "@equals(parameters('token'),triggerBody().QueryParameters.token)"
                                }
                            ]
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {
        "webhookURI": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', concat(parameters('EndpointName'), 'httplistener'))).hostNames[0],'?token=', reference(resourceId('Microsoft.AppService/gateways/tokens', concat(parameters('EndpointName'), 'gateway'), 'AlertLogicApp')).token )]"
        }
    }
}

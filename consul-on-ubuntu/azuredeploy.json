{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for each component (VMs, networks, etc)"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for VM"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique storage account name. Must be between 3 and 24 characters in length and use numbers and lower-case letters only."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "atlasInfra": {
            "type": "string",
            "metadata": {
                "description": "The name of your infrastructure in Atlas (username/infraName)"
            }
        },
        "atlasToken": {
            "type": "string",
            "metadata": {
                "description": "Your access token from Atlas"
            }
        }
    },
    "variables": {
        "numberOfInstances": 3,
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSKU": "14.04.3-LTS",
        "customScriptFilePath": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/consul-on-ubuntu/install-consul.sh",
        "customScriptCommandToExecute": "bash install-consul.sh",
        "vnetIDRef": "[concat(parameters('appPrefix'),'_VNET')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetIDRef'))]",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat('publicIP', copyindex())]",
            "copy": {
                "name": "ipLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(parameters('appPrefix'),'_AS')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('appPrefix'),'_SG')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh_rule",
                        "properties": {
                            "description": "Allow external SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(parameters('appPrefix'),'_VNET')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('appPrefix'),'_SG')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('appPrefix'),'_LB')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('appPrefix'),'_VNET')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackEnd"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/backendAddressPools/loadBalancerBackEnd')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 8500,
                            "backendPort": 8500,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "lbrule"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8500,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('appPrefix'),'_nic1', copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP', copyindex())]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('appPrefix'),'_VNET')]",
                "[concat('Microsoft.Network/loadBalancers/', parameters('appPrefix'),'_LB')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('appPrefix'),'_SG'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('publicIP', copyindex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('appPrefix'),'_LB')),'/backendAddressPools/loadBalancerBackEnd')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('appPrefix'), '_vm', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('appPrefix'),'_nic1', copyIndex())]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('appPrefix'),'_AS')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('appPrefix'),'_AS'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('vm', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyIndex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('appPrefix'),'_nic1', copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('appPrefix'), '_vm', copyIndex(), '/extension')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('appPrefix'), '_vm', copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('customScriptFilePath')]"
                    ],
                    "commandToExecute": "[concat(variables('customScriptCommandToExecute'),' ', parameters('atlasInfra'), ' ', parameters('atlasToken'))]"
                }
            }
        }
    ]
}
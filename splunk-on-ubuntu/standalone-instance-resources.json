{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "namespace": {
      "type": "string"
    },
    "osSettings": {
      "type": "object"
    },
    "vmSize": {
      "type": "string"
    },
    "subnet": {
      "type": "object"
    },
    "domainName": {
      "type": "string"
    }
  },
  "variables": {
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "publicIpName": "[concat(parameters('namespace'), 'PublicIp')]",
    "publicIpRef": "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]",
    "securityGroupName": "[concat(parameters('namespace'), 'nsg')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "22",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTP",
            "properties": {
              "description": "Allows HTTP traffic on port 8000",
              "protocol": "Tcp",
              "sourcePortRange": "8000",
              "destinationPortRange": "8000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-HTTPS",
            "properties": {
              "description": "Allows HTTPS traffic on port 443",
              "protocol": "Tcp",
              "sourcePortRange": "443",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-Receiver-TCP",
            "properties": {
              "description": "Allows receiver TCP traffic on port 9997",
              "protocol": "Tcp",
              "sourcePortRange": "9997",
              "destinationPortRange": "9997",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-Mgmt-From-VNET",
            "properties": {
              "description": "Allows mgmt on port 8089 from VNET only",
              "protocol": "Tcp",
              "sourcePortRange": "8089",
              "destinationPortRange": "8089",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 140,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainName')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namespace'), 'nic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('publicIpRef')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('securityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('namespace'), 'vm')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namespace'), 'nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('namespace'), 'vm')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('namespace'), 'vm-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": 1023,
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'datadisk1','.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": 1023,
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'datadisk2','.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namespace'), 'nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('namespace'),'vm','/node-setup')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('namespace'), 'vm'))]"
          ],
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.2",
            "settings": {
              "fileUris": "[parameters('osSettings').scripts]",
              "commandToExecute": "bash node-setup.sh"
            }
          }
        }
      ]
    }
  ],
  "outputs": {}
}

{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "workspaceName":{
         "type":"string",
         "metadata":{
            "description":"Specifies the name of the Azure Machine Learning workspace."
         }
      },
      "clusterName":{
         "type":"string",
         "metadata":{
            "description":"The name of the Managed Cluster resource."
         }
      },
      "dnsPrefix":{
         "type":"string",
         "metadata":{
            "description":"Optional DNS prefix to use with hosted Kubernetes API server FQDN."
         }
      },
      "osDiskSizeGB":{
         "type":"int",
         "defaultValue":0,
         "metadata":{
            "description":"Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
         },
         "minValue":0,
         "maxValue":1023
      },
      "agentCount":{
         "type":"int",
         "defaultValue":3,
         "metadata":{
            "description":"The number of nodes for the cluster."
         },
         "minValue":1,
         "maxValue":50
      },
      "agentVMSize":{
         "type":"string",
         "defaultValue":"Standard_DS2_v2",
         "metadata":{
            "description":"The size of the Virtual Machine."
         }
      },
      "linuxAdminUsername":{
         "type":"string",
         "metadata":{
            "description":"User name for the Linux Virtual Machines."
         }
      },
      "sshRSAPublicKey":{
         "type":"string",
         "metadata":{
            "description":"Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
         }
      },
      "servicePrincipalClientId":{
         "metadata":{
            "description":"Client ID (used by cloudprovider)"
         },
         "type":"securestring"
      },
      "servicePrincipalClientSecret":{
         "metadata":{
            "description":"The Service Principal Client Secret."
         },
         "type":"securestring"
      },
      "osType":{
         "type":"string",
         "defaultValue":"Linux",
         "allowedValues":[
            "Linux"
         ],
         "metadata":{
            "description":"The type of operating system."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Specifies the location for all resources."
         }
      },
      "storageAccountName":{
         "type":"string",
         "defaultValue":"[concat('sa',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the storage account to be created and associated with the workspace."
         }
      },
      "keyVaultName":{
         "type":"string",
         "defaultValue":"[concat('kv',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the key vault to be created and associated with the workspace."
         }
      },
      "tenantId":{
         "type":"string",
         "defaultValue":"[subscription().tenantId]",
         "metadata":{
            "description":"Specifies the tenant ID of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API."
         }
      },
      "applicationInsightsName":{
         "type":"string",
         "defaultValue":"[concat('ai',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the application insights to be created and associated with the workspace."
         }
      }
   },
   "resources":[
      {
         "apiVersion":"2020-03-01",
         "type":"Microsoft.ContainerService/managedClusters",
         "location":"[parameters('location')]",
         "name":"[parameters('clusterName')]",
         "properties":{
            "dnsPrefix":"[parameters('dnsPrefix')]",
            "agentPoolProfiles":[
               {
                  "name":"agentpool",
                  "osDiskSizeGB":"[parameters('osDiskSizeGB')]",
                  "count":"[parameters('agentCount')]",
                  "vmSize":"[parameters('agentVMSize')]",
                  "osType":"[parameters('osType')]",
                  "storageProfile":"ManagedDisks"
               }
            ],
            "linuxProfile":{
               "adminUsername":"[parameters('linuxAdminUsername')]",
               "ssh":{
                  "publicKeys":[
                     {
                        "keyData":"[parameters('sshRSAPublicKey')]"
                     }
                  ]
               }
            },
            "servicePrincipalProfile":{
               "clientId":"[parameters('servicePrincipalClientId')]",
               "Secret":"[parameters('servicePrincipalClientSecret')]"
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[parameters('storageAccountName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "encryption":{
               "services":{
                  "blob":{
                     "enabled":true
                  },
                  "file":{
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            },
            "supportsHttpsTrafficOnly":true
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults",
         "apiVersion":"2019-09-01",
         "name":"[parameters('keyVaultName')]",
         "location":"[parameters('location')]",
         "properties":{
            "tenantId":"[parameters('tenantId')]",
            "sku":{
               "name":"standard",
               "family":"A"
            },
            "accessPolicies":[

            ]
         }
      },
      {
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "name":"[parameters('applicationInsightsName')]",
         "location":"[parameters('location')]",
         "kind":"web",
         "properties":{
            "Application_Type":"web"
         }
      },
      {
         "type":"Microsoft.MachineLearningServices/workspaces",
         "apiVersion":"2020-03-01",
         "name":"[parameters('workspaceName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
         ],
         "identity":{
            "type":"systemAssigned"
         },
         "properties":{
            "friendlyName":"[parameters('workspaceName')]",
            "storageAccount":"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
            "keyVault":"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "applicationInsights":"[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
         }
      }
   ],
   "outputs":{
      "clusterName":{
         "type":"string",
         "value":"[parameters('clusterName')]"
      },
      "workspaceName":{
         "type":"string",
         "value":"[parameters('workspaceName')]"
      }
   }
}